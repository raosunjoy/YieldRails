# Horizontal Pod Autoscaler for Backend Services
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: yieldrails-backend-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yieldrails-backend
  minReplicas: 5
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 5
        periodSeconds: 30

---
# HPA for Frontend Services
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: yieldrails-frontend-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yieldrails-frontend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15

---
# Vertical Pod Autoscaler for ML Services
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: yieldrails-ml-vpa
  namespace: production
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yieldrails-ml-service
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: ml-optimization
      maxAllowed:
        cpu: 4
        memory: 8Gi
      minAllowed:
        cpu: 500m
        memory: 1Gi
      mode: Auto

---
# Custom Metrics for Application-Specific Scaling
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-metrics-config
  namespace: production
data:
  metrics.yaml: |
    rules:
    - name: yield_calculation_queue_length
      query: yield_calculation_queue_depth
      threshold: 100
      scaleUp: true
    - name: user_active_sessions
      query: active_user_sessions
      threshold: 1000
      scaleUp: true
    - name: transaction_processing_rate
      query: rate(transactions_processed_total[5m])
      threshold: 500
      scaleUp: true
    - name: ml_model_inference_latency
      query: histogram_quantile(0.95, ml_inference_duration_seconds_bucket)
      threshold: 2.0
      scaleUp: true

---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: yieldrails-backend-pdb
  namespace: production
spec:
  selector:
    matchLabels:
      app: yieldrails-backend
  minAvailable: 70%

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: yieldrails-frontend-pdb
  namespace: production
spec:
  selector:
    matchLabels:
      app: yieldrails-frontend
  minAvailable: 60%

---
# Resource Quotas for Production Namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: production-quota
  namespace: production
spec:
  hard:
    requests.cpu: "50"
    requests.memory: 100Gi
    limits.cpu: "100"
    limits.memory: 200Gi
    persistentvolumeclaims: "20"
    services: "50"
    secrets: "100"
    configmaps: "100"

---
# Limit Ranges for Resource Management
apiVersion: v1
kind: LimitRange
metadata:
  name: production-limits
  namespace: production
spec:
  limits:
  - type: Container
    default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 100m
      memory: 128Mi
    max:
      cpu: 4
      memory: 8Gi
    min:
      cpu: 50m
      memory: 64Mi
  - type: Pod
    max:
      cpu: 8
      memory: 16Gi
  - type: PersistentVolumeClaim
    max:
      storage: 1Ti