{"id":"f1a29c4cbd6a0d9d0c8f57193de715f4","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"src/interfaces/IYieldStrategy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IYieldStrategy\n * @dev Interface for yield generation strategies in YieldRails\n * @notice All yield strategies must implement this interface for compatibility\n * @author YieldRails Team\n */\ninterface IYieldStrategy {\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // EVENTS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Emitted when funds are deposited into the strategy\n     * @param user The address that deposited funds\n     * @param amount The amount deposited\n     * @param shares The number of shares minted\n     */\n    event Deposit(address indexed user, uint256 amount, uint256 shares);\n\n    /**\n     * @dev Emitted when funds are withdrawn from the strategy\n     * @param user The address that withdrew funds\n     * @param amount The amount withdrawn\n     * @param shares The number of shares burned\n     */\n    event Withdrawal(address indexed user, uint256 amount, uint256 shares);\n\n    /**\n     * @dev Emitted when yield is harvested\n     * @param yieldAmount The amount of yield harvested\n     * @param newTotalAssets The new total assets under management\n     */\n    event YieldHarvested(uint256 yieldAmount, uint256 newTotalAssets);\n\n    /**\n     * @dev Emitted when strategy parameters are updated\n     * @param parameter The parameter that was updated\n     * @param oldValue The old value\n     * @param newValue The new value\n     */\n    event StrategyUpdated(string parameter, uint256 oldValue, uint256 newValue);\n\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // STRUCTS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Strategy metadata and performance metrics\n     */\n    struct StrategyInfo {\n        string name;                // Strategy name (e.g., \"T-Bill Strategy\")\n        string description;         // Strategy description\n        uint256 totalAssets;        // Total assets under management\n        uint256 totalShares;        // Total shares outstanding\n        uint256 currentAPY;         // Current APY in basis points (e.g., 400 = 4%)\n        uint256 riskScore;          // Risk score from 1-10 (1 = lowest risk)\n        uint256 lastHarvest;        // Timestamp of last yield harvest\n        bool active;                // Whether strategy is active\n    }\n\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // DEPOSIT & WITHDRAWAL FUNCTIONS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Deposits assets into the yield strategy\n     * @param amount The amount of assets to deposit\n     * @return shares The number of shares minted to the depositor\n     */\n    function deposit(uint256 amount) external returns (uint256 shares);\n\n    /**\n     * @dev Withdraws assets from the yield strategy\n     * @param shares The number of shares to burn\n     * @return amount The amount of assets withdrawn\n     */\n    function withdraw(uint256 shares) external returns (uint256 amount);\n\n    /**\n     * @dev Emergency withdrawal of all user funds (may incur penalties)\n     * @param user The address to withdraw funds for\n     * @return amount The amount of assets withdrawn\n     */\n    function emergencyWithdraw(address user) external returns (uint256 amount);\n\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // YIELD CALCULATION FUNCTIONS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Calculates the current APY of the strategy\n     * @return apy The current APY in basis points\n     */\n    function getCurrentAPY() external view returns (uint256 apy);\n\n    /**\n     * @dev Calculates yield generated for a specific user\n     * @param user The user address\n     * @return yieldAmount The amount of yield generated\n     */\n    function calculateUserYield(address user) external view returns (uint256 yieldAmount);\n\n    /**\n     * @dev Calculates the total yield generated by the strategy\n     * @return totalYield The total yield generated\n     */\n    function getTotalYieldGenerated() external view returns (uint256 totalYield);\n\n    /**\n     * @dev Harvests yield from the underlying protocol\n     * @return yieldHarvested The amount of yield harvested\n     */\n    function harvestYield() external returns (uint256 yieldHarvested);\n\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // SHARE CALCULATION FUNCTIONS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Converts assets to shares\n     * @param assets The amount of assets\n     * @return shares The equivalent number of shares\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Converts shares to assets\n     * @param shares The number of shares\n     * @return assets The equivalent amount of assets\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Gets the user's share balance\n     * @param user The user address\n     * @return balance The user's share balance\n     */\n    function balanceOf(address user) external view returns (uint256 balance);\n\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // STRATEGY INFORMATION FUNCTIONS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Gets comprehensive strategy information\n     * @return info The strategy information struct\n     */\n    function getStrategyInfo() external view returns (StrategyInfo memory info);\n\n    /**\n     * @dev Gets the underlying asset address\n     * @return asset The address of the underlying asset (e.g., USDC)\n     */\n    function asset() external view returns (address asset);\n\n    /**\n     * @dev Gets the total assets under management\n     * @return totalManagedAssets The total assets managed by this strategy\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Gets the strategy's risk score\n     * @return risk The risk score from 1-10 (1 = lowest risk)\n     */\n    function getRiskScore() external view returns (uint256 risk);\n\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n    // PERFORMANCE FUNCTIONS\n    // ═══════════════════════════════════════════════════════════════════════════════════════════════════════════\n\n    /**\n     * @dev Gets historical performance data\n     * @param period The time period to look back (in seconds)\n     * @return performance The performance data for the specified period\n     */\n    function getPerformanceData(uint256 period) external view returns (uint256 performance);\n\n    /**\n     * @dev Checks if the strategy is profitable\n     * @return profitable Whether the strategy is currently profitable\n     */\n    function isProfitable() external view returns (bool profitable);\n\n    /**\n     * @dev Gets the maximum capacity of the strategy\n     * @return maxCapacity The maximum amount of assets the strategy can handle\n     */\n    function maxCapacity() external view returns (uint256 maxCapacity);\n\n    /**\n     * @dev Gets the current utilization rate\n     * @return utilization The utilization rate as a percentage (basis points)\n     */\n    function utilizationRate() external view returns (uint256 utilization);\n}"},"src/mocks/MockYieldStrategy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../interfaces/IYieldStrategy.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title MockYieldStrategy\n * @dev Mock yield strategy for testing purposes\n */\ncontract MockYieldStrategy is IYieldStrategy {\n    using SafeERC20 for IERC20;\n\n    address public immutable override asset;\n    string private _name;\n    uint256 private _totalAssets;\n    uint256 private _totalShares;\n    uint256 private _userYield;\n    uint256 private _currentAPY = 400; // 4% default\n    bool private _shouldFail = false;\n\n    mapping(address => uint256) private _balances;\n\n    constructor(address _asset) {\n        asset = _asset;\n        _name = \"Mock Strategy\";\n    }\n\n    // Test helper functions\n    function setUserYield(uint256 amount) external {\n        _userYield = amount;\n    }\n\n    function setShouldFail(bool shouldFail) external {\n        _shouldFail = shouldFail;\n    }\n\n    function setCurrentAPY(uint256 apy) external {\n        _currentAPY = apy;\n    }\n\n    function setName(string memory strategyName) external {\n        _name = strategyName;\n    }\n\n    // Additional methods for testing compatibility\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    function currentAPY() external view returns (uint256) {\n        return _currentAPY;\n    }\n\n    function totalDeposited() external view returns (uint256) {\n        return _totalAssets;\n    }\n\n    function calculateYield(uint256 principal, uint256 timeInSeconds) external view returns (uint256) {\n        // Simple yield calculation: (principal * APY * time) / (10000 * seconds_in_year)\n        uint256 annualYield = (principal * _currentAPY) / 10000;\n        uint256 secondsInYear = 365 * 24 * 60 * 60;\n        return (annualYield * timeInSeconds) / secondsInYear;\n    }\n\n    // IYieldStrategy implementation\n    function deposit(uint256 amount) external override returns (uint256 shares) {\n        IERC20(asset).safeTransferFrom(msg.sender, address(this), amount);\n        \n        shares = convertToShares(amount);\n        _balances[msg.sender] += shares;\n        _totalShares += shares;\n        _totalAssets += amount;\n\n        emit Deposit(msg.sender, amount, shares);\n        return shares;\n    }\n\n    function withdraw(uint256 shares) external override returns (uint256 amount) {\n        require(_balances[msg.sender] >= shares, \"Insufficient shares\");\n        \n        amount = convertToAssets(shares);\n        _balances[msg.sender] -= shares;\n        _totalShares -= shares;\n        _totalAssets -= amount;\n\n        IERC20(asset).safeTransfer(msg.sender, amount);\n\n        emit Withdrawal(msg.sender, amount, shares);\n        return amount;\n    }\n\n    function emergencyWithdraw(address user) external override returns (uint256 amount) {\n        uint256 userShares = _balances[user];\n        if (userShares == 0) return 0;\n\n        amount = convertToAssets(userShares);\n        _balances[user] = 0;\n        _totalShares -= userShares;\n        _totalAssets -= amount;\n\n        IERC20(asset).safeTransfer(user, amount);\n        return amount;\n    }\n\n    function getCurrentAPY() external view override returns (uint256) {\n        return _currentAPY;\n    }\n\n    function calculateUserYield(address user) external view override returns (uint256) {\n        if (_shouldFail) {\n            revert(\"Mock strategy failure\");\n        }\n        return _userYield;\n    }\n\n    function getTotalYieldGenerated() external view override returns (uint256) {\n        return _userYield;\n    }\n\n    function harvestYield() external override returns (uint256) {\n        emit YieldHarvested(_userYield, _totalAssets);\n        return _userYield;\n    }\n\n    function convertToShares(uint256 assets) public view override returns (uint256) {\n        if (_totalAssets == 0) return assets;\n        return (assets * _totalShares) / _totalAssets;\n    }\n\n    function convertToAssets(uint256 shares) public view override returns (uint256) {\n        if (_totalShares == 0) return shares;\n        return (shares * _totalAssets) / _totalShares;\n    }\n\n    function balanceOf(address user) external view override returns (uint256) {\n        return _balances[user];\n    }\n\n    function getStrategyInfo() external view override returns (StrategyInfo memory) {\n        return StrategyInfo({\n            name: \"Mock Strategy\",\n            description: \"Mock yield strategy for testing\",\n            totalAssets: _totalAssets,\n            totalShares: _totalShares,\n            currentAPY: _currentAPY,\n            riskScore: 1,\n            lastHarvest: block.timestamp,\n            active: true\n        });\n    }\n\n    function totalAssets() external view override returns (uint256) {\n        return _totalAssets;\n    }\n\n    function getRiskScore() external pure override returns (uint256) {\n        return 1;\n    }\n\n    function getPerformanceData(uint256) external view override returns (uint256) {\n        return _currentAPY;\n    }\n\n    function isProfitable() external pure override returns (bool) {\n        return true;\n    }\n\n    function maxCapacity() external pure override returns (uint256) {\n        return type(uint256).max;\n    }\n\n    function utilizationRate() external view override returns (uint256) {\n        return _totalAssets > 0 ? (_totalAssets * 10000) / this.maxCapacity() : 0;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> src/mocks/MockYieldStrategy.sol:111:33:\n    |\n111 |     function calculateUserYield(address user) external view override returns (uint256) {\n    |                                 ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3350,"file":"src/mocks/MockYieldStrategy.sol","start":3338},"type":"Warning"}],"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2676:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2668:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2690:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2682:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2702:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2694:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2728:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:0"},"scope":77,"src":"2646:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2534:0","usedErrors":[],"usedEvents":[11,20]}],"src":"106:2631:0"},"id":0},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[113]},"id":114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"148:1963:1","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":113,"linearizedBaseContracts":[113],"name":"IERC20Permit","nameLocation":"2122:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2141:850:1","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"owner","nameLocation":"3029:5:1","nodeType":"VariableDeclaration","scope":98,"src":"3021:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"spender","nameLocation":"3052:7:1","nodeType":"VariableDeclaration","scope":98,"src":"3044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"value","nameLocation":"3077:5:1","nodeType":"VariableDeclaration","scope":98,"src":"3069:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:1","nodeType":"VariableDeclaration","scope":98,"src":"3092:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"v","nameLocation":"3124:1:1","nodeType":"VariableDeclaration","scope":98,"src":"3118:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":90,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"r","nameLocation":"3143:1:1","nodeType":"VariableDeclaration","scope":98,"src":"3135:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"s","nameLocation":"3162:1:1","nodeType":"VariableDeclaration","scope":98,"src":"3154:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"3178:0:1"},"scope":113,"src":"2996:183:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3185:294:1","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":106,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"owner","nameLocation":"3508:5:1","nodeType":"VariableDeclaration","scope":106,"src":"3500:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"3538:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:1"},"scope":113,"src":"3484:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"3553:128:1","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":112,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"3764:2:1"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":112,"src":"3790:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:1"},"scope":113,"src":"3739:60:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":114,"src":"2112:1689:1","usedErrors":[],"usedEvents":[]}],"src":"123:3679:1"},"id":1},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[819],"IERC20":[77],"IERC20Permit":[113],"SafeERC20":[489]},"id":490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":115,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":490,"sourceUnit":78,"src":"140:23:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":490,"sourceUnit":114,"src":"164:40:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":490,"sourceUnit":820,"src":"205:36:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"243:457:2","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":489,"linearizedBaseContracts":[489],"name":"SafeERC20","nameLocation":"709:9:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":122,"libraryName":{"id":120,"name":"Address","nameLocations":["731:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"731:7:2"},"nodeType":"UsingForDirective","src":"725:26:2","typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":145,"nodeType":"Block","src":"1013:103:2","statements":[{"expression":{"arguments":[{"id":134,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1043:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":137,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1073:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:2","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1073:14:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:2","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":140,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1102:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":135,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":133,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1023:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1023:86:2"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"757:179:2","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:2","nodeType":"FunctionDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"token","nameLocation":"970:5:2","nodeType":"VariableDeclaration","scope":146,"src":"963:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":125,"nodeType":"UserDefinedTypeName","pathNode":{"id":124,"name":"IERC20","nameLocations":["963:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"963:6:2"},"referencedDeclaration":77,"src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"to","nameLocation":"985:2:2","nodeType":"VariableDeclaration","scope":146,"src":"977:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"value","nameLocation":"997:5:2","nodeType":"VariableDeclaration","scope":146,"src":"989:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:2"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"1013:0:2"},"scope":489,"src":"941:175:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"1445:113:2","statements":[{"expression":{"arguments":[{"id":160,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1475:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":163,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1505:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":76,"src":"1505:18:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:2","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1534:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":167,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1540:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1544:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":161,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":159,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1455:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"1455:96:2"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1122:228:2","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":173,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"token","nameLocation":"1388:5:2","nodeType":"VariableDeclaration","scope":173,"src":"1381:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":149,"nodeType":"UserDefinedTypeName","pathNode":{"id":148,"name":"IERC20","nameLocations":["1381:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1381:6:2"},"referencedDeclaration":77,"src":"1381:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"from","nameLocation":"1403:4:2","nodeType":"VariableDeclaration","scope":173,"src":"1395:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"to","nameLocation":"1417:2:2","nodeType":"VariableDeclaration","scope":173,"src":"1409:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"value","nameLocation":"1429:5:2","nodeType":"VariableDeclaration","scope":173,"src":"1421:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:2"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"1445:0:2"},"scope":489,"src":"1355:203:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"1894:497:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2143:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":193,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$489","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$489","typeString":"library SafeERC20"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:2","typeDescriptions":{}}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":195,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2190:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":189,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2159:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"2159:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"2121:163:2"},{"expression":{"arguments":[{"id":205,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2314:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":208,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2344:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2344:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:2","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2368:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2377:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":206,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":204,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2294:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"ExpressionStatement","src":"2294:90:2"}]},"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1564:249:2","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"token","nameLocation":"1846:5:2","nodeType":"VariableDeclaration","scope":217,"src":"1839:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":176,"nodeType":"UserDefinedTypeName","pathNode":{"id":175,"name":"IERC20","nameLocations":["1839:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1839:6:2"},"referencedDeclaration":77,"src":"1839:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"spender","nameLocation":"1861:7:2","nodeType":"VariableDeclaration","scope":217,"src":"1853:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"value","nameLocation":"1878:5:2","nodeType":"VariableDeclaration","scope":217,"src":"1870:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:2"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"1894:0:2"},"scope":489,"src":"1818:573:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"2668:194:2","statements":[{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:2","nodeType":"VariableDeclaration","scope":253,"src":"2678:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":238,"initialValue":{"arguments":[{"arguments":[{"id":234,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$489","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$489","typeString":"library SafeERC20"}],"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:2","typeDescriptions":{}}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":236,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2732:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":230,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2701:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"2701:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:2"},{"expression":{"arguments":[{"id":240,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2770:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":243,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2800:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2800:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:2","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":246,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2824:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":247,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2833:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2848:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":241,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":239,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2750:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"2750:105:2"}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"2397:180:2","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:2","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"token","nameLocation":"2620:5:2","nodeType":"VariableDeclaration","scope":254,"src":"2613:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"IERC20","nameLocations":["2613:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2613:6:2"},"referencedDeclaration":77,"src":"2613:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"spender","nameLocation":"2635:7:2","nodeType":"VariableDeclaration","scope":254,"src":"2627:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"value","nameLocation":"2652:5:2","nodeType":"VariableDeclaration","scope":254,"src":"2644:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2668:0:2"},"scope":489,"src":"2582:280:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"3139:321:2","statements":[{"id":297,"nodeType":"UncheckedBlock","src":"3149:305:2","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:2","nodeType":"VariableDeclaration","scope":297,"src":"3173:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":275,"initialValue":{"arguments":[{"arguments":[{"id":271,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$489","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$489","typeString":"library SafeERC20"}],"id":270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:2","typeDescriptions":{}}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3227:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3196:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"3196:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3257:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3273:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"3249:75:2"},{"expression":{"arguments":[{"id":284,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3358:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":287,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3388:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"3388:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:2","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":290,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3412:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3421:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3436:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":285,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":283,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"3338:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"3338:105:2"}]}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"2868:180:2","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:2","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"token","nameLocation":"3091:5:2","nodeType":"VariableDeclaration","scope":299,"src":"3084:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":257,"nodeType":"UserDefinedTypeName","pathNode":{"id":256,"name":"IERC20","nameLocations":["3084:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3084:6:2"},"referencedDeclaration":77,"src":"3084:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"spender","nameLocation":"3106:7:2","nodeType":"VariableDeclaration","scope":299,"src":"3098:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"value","nameLocation":"3123:5:2","nodeType":"VariableDeclaration","scope":299,"src":"3115:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:2"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"3139:0:2"},"scope":489,"src":"3053:407:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":345,"nodeType":"Block","src":"3856:333:2","statements":[{"assignments":[311],"declarations":[{"constant":false,"id":311,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:2","nodeType":"VariableDeclaration","scope":345,"src":"3866:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":310,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":320,"initialValue":{"arguments":[{"expression":{"expression":{"id":314,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"3917:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"3917:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:2","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":317,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3941:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3950:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:2"},{"condition":{"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:2","subExpression":{"arguments":[{"id":322,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"3996:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"id":323,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"4003:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":321,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3972:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":344,"nodeType":"IfStatement","src":"3967:216:2","trueBody":{"id":343,"nodeType":"Block","src":"4018:165:2","statements":[{"expression":{"arguments":[{"id":327,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4052:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":330,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4082:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"4082:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:2","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":333,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4106:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":328,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":326,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4032:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"4032:86:2"},{"expression":{"arguments":[{"id":339,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4152:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"id":340,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"4159:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":338,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4132:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"ExpressionStatement","src":"4132:40:2"}]}}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3466:308:2","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:2","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"token","nameLocation":"3808:5:2","nodeType":"VariableDeclaration","scope":346,"src":"3801:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":302,"nodeType":"UserDefinedTypeName","pathNode":{"id":301,"name":"IERC20","nameLocations":["3801:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3801:6:2"},"referencedDeclaration":77,"src":"3801:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"spender","nameLocation":"3823:7:2","nodeType":"VariableDeclaration","scope":346,"src":"3815:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"value","nameLocation":"3840:5:2","nodeType":"VariableDeclaration","scope":346,"src":"3832:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:2"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"3856:0:2"},"scope":489,"src":"3779:410:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"4556:257:2","statements":[{"assignments":[368],"declarations":[{"constant":false,"id":368,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:2","nodeType":"VariableDeclaration","scope":402,"src":"4566:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":373,"initialValue":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4601:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":369,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4588:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:2","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":106,"src":"4588:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:2"},{"expression":{"arguments":[{"id":377,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4630:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"4637:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4646:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":380,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4653:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":381,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4663:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":382,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4666:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":383,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4669:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4617:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:2","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":98,"src":"4617:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"ExpressionStatement","src":"4617:54:2"},{"assignments":[387],"declarations":[{"constant":false,"id":387,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:2","nodeType":"VariableDeclaration","scope":402,"src":"4681:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":392,"initialValue":{"arguments":[{"id":390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4715:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4702:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:2","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":106,"src":"4702:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"4739:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":395,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4753:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"4731:75:2"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4195:141:2","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"token","nameLocation":"4383:5:2","nodeType":"VariableDeclaration","scope":403,"src":"4370:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"},"typeName":{"id":349,"nodeType":"UserDefinedTypeName","pathNode":{"id":348,"name":"IERC20Permit","nameLocations":["4370:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"4370:12:2"},"referencedDeclaration":113,"src":"4370:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"4406:5:2","nodeType":"VariableDeclaration","scope":403,"src":"4398:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"spender","nameLocation":"4429:7:2","nodeType":"VariableDeclaration","scope":403,"src":"4421:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"value","nameLocation":"4454:5:2","nodeType":"VariableDeclaration","scope":403,"src":"4446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:2","nodeType":"VariableDeclaration","scope":403,"src":"4469:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"v","nameLocation":"4501:1:2","nodeType":"VariableDeclaration","scope":403,"src":"4495:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":359,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"r","nameLocation":"4520:1:2","nodeType":"VariableDeclaration","scope":403,"src":"4512:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"s","nameLocation":"4539:1:2","nodeType":"VariableDeclaration","scope":403,"src":"4531:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:2"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"4556:0:2"},"scope":489,"src":"4341:472:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":439,"nodeType":"Block","src":"5266:572:2","statements":[{"assignments":[413],"declarations":[{"constant":false,"id":413,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:2","nodeType":"VariableDeclaration","scope":439,"src":"5615:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":412,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":422,"initialValue":{"arguments":[{"id":419,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5669:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":416,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"5649:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:2","typeDescriptions":{}}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:2","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":579,"src":"5641:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":424,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5728:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:2","memberName":"length","nodeType":"MemberAccess","src":"5728:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":430,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5765:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":431,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:2","typeDescriptions":{}}}],"id":433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":428,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:2","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"5720:111:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"4819:372:2","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":440,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:2","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"token","nameLocation":"5232:5:2","nodeType":"VariableDeclaration","scope":440,"src":"5225:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":406,"nodeType":"UserDefinedTypeName","pathNode":{"id":405,"name":"IERC20","nameLocations":["5225:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"5225:6:2"},"referencedDeclaration":77,"src":"5225:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"data","nameLocation":"5252:4:2","nodeType":"VariableDeclaration","scope":440,"src":"5239:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":408,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:2"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"5266:0:2"},"scope":489,"src":"5196:642:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":487,"nodeType":"Block","src":"6428:505:2","statements":[{"assignments":[452,454],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"success","nameLocation":"6729:7:2","nodeType":"VariableDeclaration","scope":487,"src":"6724:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:2","nodeType":"VariableDeclaration","scope":487,"src":"6738:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":462,"initialValue":{"arguments":[{"id":460,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6785:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":457,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6773:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:2","typeDescriptions":{}}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:2","memberName":"call","nodeType":"MemberAccess","src":"6765:19:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6819:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":464,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6831:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:2","memberName":"length","nodeType":"MemberAccess","src":"6831:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":470,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6868:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":471,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:2","typeDescriptions":{}}}],"id":473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":468,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:2","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":482,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6919:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:2","typeDescriptions":{}}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":478,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6892:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$819_$","typeString":"type(library Address)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":507,"src":"6892:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":450,"id":486,"nodeType":"Return","src":"6800:126:2"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"5844:490:2","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":488,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:2","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"token","nameLocation":"6379:5:2","nodeType":"VariableDeclaration","scope":488,"src":"6372:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":443,"nodeType":"UserDefinedTypeName","pathNode":{"id":442,"name":"IERC20","nameLocations":["6372:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"6372:6:2"},"referencedDeclaration":77,"src":"6372:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"data","nameLocation":"6399:4:2","nodeType":"VariableDeclaration","scope":488,"src":"6386:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"6422:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":448,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:2"},"scope":489,"src":"6339:594:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":490,"src":"701:6234:2","usedErrors":[],"usedEvents":[]}],"src":"115:6821:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[819]},"id":820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":491,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"126:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":819,"linearizedBaseContracts":[819],"name":"Address","nameLocation":"202:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":506,"nodeType":"Block","src":"1478:254:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":500,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"1702:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:3","memberName":"code","nodeType":"MemberAccess","src":"1702:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:3","memberName":"length","nodeType":"MemberAccess","src":"1702:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"1695:30:3"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"216:1191:3","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:3","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"account","nameLocation":"1440:7:3","nodeType":"VariableDeclaration","scope":507,"src":"1432:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:3"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"1472:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:3"},"scope":819,"src":"1412:320:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"2718:241:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":518,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$819","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$819","typeString":"library Address"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:3","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2761:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"2728:73:3"},{"assignments":[527,null],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"success","nameLocation":"2818:7:3","nodeType":"VariableDeclaration","scope":540,"src":"2813:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":534,"initialValue":{"arguments":[{"hexValue":"","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":528,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"2831:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:3","memberName":"call","nodeType":"MemberAccess","src":"2831:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":530,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2853:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:3"},{"expression":{"arguments":[{"id":536,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"2874:78:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"1738:904:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:3","nodeType":"FunctionDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:3","nodeType":"VariableDeclaration","scope":541,"src":"2666:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"amount","nameLocation":"2701:6:3","nodeType":"VariableDeclaration","scope":541,"src":"2693:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:3"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"2718:0:3"},"scope":819,"src":"2647:312:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"3790:96:3","statements":[{"expression":{"arguments":[{"id":552,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3829:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3837:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":551,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[599,643],"referencedDeclaration":643,"src":"3807:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":550,"id":557,"nodeType":"Return","src":"3800:79:3"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"2965:731:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:3","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"target","nameLocation":"3731:6:3","nodeType":"VariableDeclaration","scope":559,"src":"3723:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"data","nameLocation":"3752:4:3","nodeType":"VariableDeclaration","scope":559,"src":"3739:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":545,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:3"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"3776:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":548,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:3"},"scope":819,"src":"3701:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"4255:76:3","statements":[{"expression":{"arguments":[{"id":572,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4294:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":573,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4302:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":575,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4311:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":571,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[599,643],"referencedDeclaration":643,"src":"4272:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":570,"id":577,"nodeType":"Return","src":"4265:59:3"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"3892:211:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:3","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"target","nameLocation":"4147:6:3","nodeType":"VariableDeclaration","scope":579,"src":"4139:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4176:4:3","nodeType":"VariableDeclaration","scope":579,"src":"4163:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:3","nodeType":"VariableDeclaration","scope":579,"src":"4190:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":565,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:3"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"4241:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":568,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:3"},"scope":819,"src":"4108:223:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":598,"nodeType":"Block","src":"4806:111:3","statements":[{"expression":{"arguments":[{"id":592,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4845:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4853:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4859:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":591,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[599,643],"referencedDeclaration":643,"src":"4823:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":590,"id":597,"nodeType":"Return","src":"4816:94:3"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"4337:351:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":599,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:3","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"target","nameLocation":"4732:6:3","nodeType":"VariableDeclaration","scope":599,"src":"4724:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"data","nameLocation":"4753:4:3","nodeType":"VariableDeclaration","scope":599,"src":"4740:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"value","nameLocation":"4767:5:3","nodeType":"VariableDeclaration","scope":599,"src":"4759:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:3"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"4792:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:3"},"scope":819,"src":"4693:224:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"5344:267:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":616,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$819","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$819","typeString":"library Address"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:3","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:3","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5387:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"5354:81:3"},{"assignments":[625,627],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"success","nameLocation":"5451:7:3","nodeType":"VariableDeclaration","scope":642,"src":"5446:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":624,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:3","nodeType":"VariableDeclaration","scope":642,"src":"5460:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":626,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[{"id":632,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5513:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":628,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5487:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:3","memberName":"call","nodeType":"MemberAccess","src":"5487:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5506:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:3"},{"expression":{"arguments":[{"id":636,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5562:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5570:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":638,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"5579:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":639,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5591:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":635,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"5535:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":612,"id":641,"nodeType":"Return","src":"5528:76:3"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"4923:237:3","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:3","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"target","nameLocation":"5213:6:3","nodeType":"VariableDeclaration","scope":643,"src":"5205:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"data","nameLocation":"5242:4:3","nodeType":"VariableDeclaration","scope":643,"src":"5229:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":603,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"value","nameLocation":"5264:5:3","nodeType":"VariableDeclaration","scope":643,"src":"5256:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:3","nodeType":"VariableDeclaration","scope":643,"src":"5279:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":607,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:3"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"5330:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:3"},"scope":819,"src":"5165:446:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":659,"nodeType":"Block","src":"5888:97:3","statements":[{"expression":{"arguments":[{"id":654,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"5924:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"5932:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":653,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[660,689],"referencedDeclaration":689,"src":"5905:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":652,"id":658,"nodeType":"Return","src":"5898:80:3"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"5617:166:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:3","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"target","nameLocation":"5824:6:3","nodeType":"VariableDeclaration","scope":660,"src":"5816:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"data","nameLocation":"5845:4:3","nodeType":"VariableDeclaration","scope":660,"src":"5832:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":647,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:3"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"5874:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:3"},"scope":819,"src":"5788:197:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"6327:168:3","statements":[{"assignments":[673,675],"declarations":[{"constant":false,"id":673,"mutability":"mutable","name":"success","nameLocation":"6343:7:3","nodeType":"VariableDeclaration","scope":688,"src":"6338:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":672,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:3","nodeType":"VariableDeclaration","scope":688,"src":"6352:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":680,"initialValue":{"arguments":[{"id":678,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6397:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":676,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6379:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:3"},{"expression":{"arguments":[{"id":682,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6446:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":683,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"6454:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":684,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6463:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":685,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"6475:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":681,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6419:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":671,"id":687,"nodeType":"Return","src":"6412:76:3"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"5991:173:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":689,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"target","nameLocation":"6214:6:3","nodeType":"VariableDeclaration","scope":689,"src":"6206:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"data","nameLocation":"6243:4:3","nodeType":"VariableDeclaration","scope":689,"src":"6230:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:3","nodeType":"VariableDeclaration","scope":689,"src":"6257:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":666,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":689,"src":"6313:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":669,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:3"},"scope":819,"src":"6169:326:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":705,"nodeType":"Block","src":"6771:101:3","statements":[{"expression":{"arguments":[{"id":700,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"6809:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"6817:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":699,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[706,735],"referencedDeclaration":735,"src":"6788:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":698,"id":704,"nodeType":"Return","src":"6781:84:3"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"6501:168:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":706,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:3","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"target","nameLocation":"6712:6:3","nodeType":"VariableDeclaration","scope":706,"src":"6704:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"data","nameLocation":"6733:4:3","nodeType":"VariableDeclaration","scope":706,"src":"6720:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":693,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:3"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"6757:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:3"},"scope":819,"src":"6674:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":734,"nodeType":"Block","src":"7213:170:3","statements":[{"assignments":[719,721],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"success","nameLocation":"7229:7:3","nodeType":"VariableDeclaration","scope":734,"src":"7224:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":718,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:3","nodeType":"VariableDeclaration","scope":734,"src":"7238:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":726,"initialValue":{"arguments":[{"id":724,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7285:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":722,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"7265:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:3"},{"expression":{"arguments":[{"id":728,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"7334:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"7342:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":730,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"7351:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":731,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"7363:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":727,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7307:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":717,"id":733,"nodeType":"Return","src":"7300:76:3"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"6878:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":735,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:3","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"target","nameLocation":"7105:6:3","nodeType":"VariableDeclaration","scope":735,"src":"7097:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"data","nameLocation":"7134:4:3","nodeType":"VariableDeclaration","scope":735,"src":"7121:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":710,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:3","nodeType":"VariableDeclaration","scope":735,"src":"7148:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":712,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:3"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"7199:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":715,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:3"},"scope":819,"src":"7058:325:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":773,"nodeType":"Block","src":"7865:434:3","statements":[{"condition":{"id":749,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7879:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":771,"nodeType":"Block","src":"8235:58:3","statements":[{"expression":{"arguments":[{"id":767,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"8257:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":768,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"8269:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":766,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8249:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"ExpressionStatement","src":"8249:33:3"}]},"id":772,"nodeType":"IfStatement","src":"7875:418:3","trueBody":{"id":765,"nodeType":"Block","src":"7888:341:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":750,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"7906:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:3","memberName":"length","nodeType":"MemberAccess","src":"7906:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"7902:286:3","trueBody":{"id":761,"nodeType":"Block","src":"7930:258:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":756,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"8132:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"8121:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"8113:60:3"}]}},{"expression":{"id":763,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"8208:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":748,"id":764,"nodeType":"Return","src":"8201:17:3"}]}}]},"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"7389:277:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":774,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:3","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"target","nameLocation":"7724:6:3","nodeType":"VariableDeclaration","scope":774,"src":"7716:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"success","nameLocation":"7745:7:3","nodeType":"VariableDeclaration","scope":774,"src":"7740:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":739,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:3","nodeType":"VariableDeclaration","scope":774,"src":"7762:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":741,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:3","nodeType":"VariableDeclaration","scope":774,"src":"7795:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":743,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:3"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":774,"src":"7851:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":746,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:3"},"scope":819,"src":"7671:628:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"8680:135:3","statements":[{"condition":{"id":786,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8694:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":795,"nodeType":"Block","src":"8751:58:3","statements":[{"expression":{"arguments":[{"id":791,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8773:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":792,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"8785:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":790,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8765:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"ExpressionStatement","src":"8765:33:3"}]},"id":796,"nodeType":"IfStatement","src":"8690:119:3","trueBody":{"id":789,"nodeType":"Block","src":"8703:42:3","statements":[{"expression":{"id":787,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8724:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":785,"id":788,"nodeType":"Return","src":"8717:17:3"}]}}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"8305:210:3","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:3","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"success","nameLocation":"8560:7:3","nodeType":"VariableDeclaration","scope":798,"src":"8555:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:3","nodeType":"VariableDeclaration","scope":798,"src":"8577:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":778,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:3","nodeType":"VariableDeclaration","scope":798,"src":"8610:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":780,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"8666:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:3"},"scope":819,"src":"8520:295:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"8904:457:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":805,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"8980:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:3","memberName":"length","nodeType":"MemberAccess","src":"8980:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":815,"nodeType":"Block","src":"9310:45:3","statements":[{"expression":{"arguments":[{"id":812,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9331:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":811,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9324:20:3"}]},"id":816,"nodeType":"IfStatement","src":"8976:379:3","trueBody":{"id":810,"nodeType":"Block","src":"9003:301:3","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:3","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:3","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:3"},"nodeType":"YulFunctionCall","src":"9202:17:3"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:3","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:3"},"nodeType":"YulFunctionCall","src":"9243:19:3"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:3"},"nodeType":"YulFunctionCall","src":"9236:44:3"},"nodeType":"YulExpressionStatement","src":"9236:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":800,"isOffset":false,"isSlot":false,"src":"9208:10:3","valueSize":1},{"declaration":800,"isOffset":false,"isSlot":false,"src":"9251:10:3","valueSize":1}],"id":809,"nodeType":"InlineAssembly","src":"9152:142:3"}]}}]},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:3","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:3","nodeType":"VariableDeclaration","scope":818,"src":"8838:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:3","nodeType":"VariableDeclaration","scope":818,"src":"8863:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":801,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:3"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"8904:0:3"},"scope":819,"src":"8821:540:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":820,"src":"194:9169:3","usedErrors":[],"usedEvents":[]}],"src":"101:9263:3"},"id":3},"src/interfaces/IYieldStrategy.sol":{"ast":{"absolutePath":"src/interfaces/IYieldStrategy.sol","exportedSymbols":{"IYieldStrategy":[1000]},"id":1001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":821,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IYieldStrategy","contractDependencies":[],"contractKind":"interface","documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"58:203:4","text":" @title IYieldStrategy\n @dev Interface for yield generation strategies in YieldRails\n @notice All yield strategies must implement this interface for compatibility\n @author YieldRails Team"},"fullyImplemented":false,"id":1000,"linearizedBaseContracts":[1000],"name":"IYieldStrategy","nameLocation":"272:14:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"966:217:4","text":" @dev Emitted when funds are deposited into the strategy\n @param user The address that deposited funds\n @param amount The amount deposited\n @param shares The number of shares minted"},"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":831,"name":"Deposit","nameLocation":"1194:7:4","nodeType":"EventDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1218:4:4","nodeType":"VariableDeclaration","scope":831,"src":"1202:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1232:6:4","nodeType":"VariableDeclaration","scope":831,"src":"1224:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":829,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1248:6:4","nodeType":"VariableDeclaration","scope":831,"src":"1240:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1201:54:4"},"src":"1188:68:4"},{"anonymous":false,"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"1262:216:4","text":" @dev Emitted when funds are withdrawn from the strategy\n @param user The address that withdrew funds\n @param amount The amount withdrawn\n @param shares The number of shares burned"},"eventSelector":"df273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb","id":840,"name":"Withdrawal","nameLocation":"1489:10:4","nodeType":"EventDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1516:4:4","nodeType":"VariableDeclaration","scope":840,"src":"1500:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1530:6:4","nodeType":"VariableDeclaration","scope":840,"src":"1522:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":838,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1546:6:4","nodeType":"VariableDeclaration","scope":840,"src":"1538:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1499:54:4"},"src":"1483:71:4"},{"anonymous":false,"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1560:178:4","text":" @dev Emitted when yield is harvested\n @param yieldAmount The amount of yield harvested\n @param newTotalAssets The new total assets under management"},"eventSelector":"3fb12fb590bb295327f3bfc48158ada0b1147f8f823e0c7a09b98b301d186774","id":847,"name":"YieldHarvested","nameLocation":"1749:14:4","nodeType":"EventDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"yieldAmount","nameLocation":"1772:11:4","nodeType":"VariableDeclaration","scope":847,"src":"1764:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"indexed":false,"mutability":"mutable","name":"newTotalAssets","nameLocation":"1793:14:4","nodeType":"VariableDeclaration","scope":847,"src":"1785:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1763:45:4"},"src":"1743:66:4"},{"anonymous":false,"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"1815:197:4","text":" @dev Emitted when strategy parameters are updated\n @param parameter The parameter that was updated\n @param oldValue The old value\n @param newValue The new value"},"eventSelector":"a9409988ce3bd68f1874347d71ecc5e0bd9a8aa4f9fe57f336c1f7b697f19e22","id":856,"name":"StrategyUpdated","nameLocation":"2023:15:4","nodeType":"EventDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"indexed":false,"mutability":"mutable","name":"parameter","nameLocation":"2046:9:4","nodeType":"VariableDeclaration","scope":856,"src":"2039:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":849,"name":"string","nodeType":"ElementaryTypeName","src":"2039:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":852,"indexed":false,"mutability":"mutable","name":"oldValue","nameLocation":"2065:8:4","nodeType":"VariableDeclaration","scope":856,"src":"2057:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"2083:8:4","nodeType":"VariableDeclaration","scope":856,"src":"2075:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2038:54:4"},"src":"2017:76:4"},{"canonicalName":"IYieldStrategy.StrategyInfo","documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"2773:65:4","text":" @dev Strategy metadata and performance metrics"},"id":874,"members":[{"constant":false,"id":859,"mutability":"mutable","name":"name","nameLocation":"2880:4:4","nodeType":"VariableDeclaration","scope":874,"src":"2873:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":858,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"description","nameLocation":"2959:11:4","nodeType":"VariableDeclaration","scope":874,"src":"2952:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":860,"name":"string","nodeType":"ElementaryTypeName","src":"2952:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"totalAssets","nameLocation":"3020:11:4","nodeType":"VariableDeclaration","scope":874,"src":"3012:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"totalShares","nameLocation":"3089:11:4","nodeType":"VariableDeclaration","scope":874,"src":"3081:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"3081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"currentAPY","nameLocation":"3153:10:4","nodeType":"VariableDeclaration","scope":874,"src":"3145:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"3145:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"riskScore","nameLocation":"3237:9:4","nodeType":"VariableDeclaration","scope":874,"src":"3229:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"3229:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"lastHarvest","nameLocation":"3315:11:4","nodeType":"VariableDeclaration","scope":874,"src":"3307:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"active","nameLocation":"3383:6:4","nodeType":"VariableDeclaration","scope":874,"src":"3378:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":872,"name":"bool","nodeType":"ElementaryTypeName","src":"3378:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StrategyInfo","nameLocation":"2850:12:4","nodeType":"StructDefinition","scope":1000,"src":"2843:598:4","visibility":"public"},{"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"4144:183:4","text":" @dev Deposits assets into the yield strategy\n @param amount The amount of assets to deposit\n @return shares The number of shares minted to the depositor"},"functionSelector":"b6b55f25","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"4341:7:4","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"amount","nameLocation":"4357:6:4","nodeType":"VariableDeclaration","scope":882,"src":"4349:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"4349:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4348:16:4"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"shares","nameLocation":"4391:6:4","nodeType":"VariableDeclaration","scope":882,"src":"4383:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"4383:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4382:16:4"},"scope":1000,"src":"4332:67:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"4405:167:4","text":" @dev Withdraws assets from the yield strategy\n @param shares The number of shares to burn\n @return amount The amount of assets withdrawn"},"functionSelector":"2e1a7d4d","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"4586:8:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"shares","nameLocation":"4603:6:4","nodeType":"VariableDeclaration","scope":890,"src":"4595:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4595:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4594:16:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"amount","nameLocation":"4637:6:4","nodeType":"VariableDeclaration","scope":890,"src":"4629:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4629:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4628:16:4"},"scope":1000,"src":"4577:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"4651:190:4","text":" @dev Emergency withdrawal of all user funds (may incur penalties)\n @param user The address to withdraw funds for\n @return amount The amount of assets withdrawn"},"functionSelector":"6ff1c9bc","id":898,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"4855:17:4","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"user","nameLocation":"4881:4:4","nodeType":"VariableDeclaration","scope":898,"src":"4873:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"4873:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4872:14:4"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"amount","nameLocation":"4913:6:4","nodeType":"VariableDeclaration","scope":898,"src":"4905:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"4905:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4904:16:4"},"scope":1000,"src":"4846:75:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"5621:117:4","text":" @dev Calculates the current APY of the strategy\n @return apy The current APY in basis points"},"functionSelector":"962ca496","id":904,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentAPY","nameLocation":"5752:13:4","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"5765:2:4"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"apy","nameLocation":"5799:3:4","nodeType":"VariableDeclaration","scope":904,"src":"5791:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5790:13:4"},"scope":1000,"src":"5743:61:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"5810:163:4","text":" @dev Calculates yield generated for a specific user\n @param user The user address\n @return yieldAmount The amount of yield generated"},"functionSelector":"6f7c99d2","id":912,"implemented":false,"kind":"function","modifiers":[],"name":"calculateUserYield","nameLocation":"5987:18:4","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"user","nameLocation":"6014:4:4","nodeType":"VariableDeclaration","scope":912,"src":"6006:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6005:14:4"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"yieldAmount","nameLocation":"6051:11:4","nodeType":"VariableDeclaration","scope":912,"src":"6043:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"6043:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6042:21:4"},"scope":1000,"src":"5978:86:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"6070:128:4","text":" @dev Calculates the total yield generated by the strategy\n @return totalYield The total yield generated"},"functionSelector":"39c1a8e8","id":918,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalYieldGenerated","nameLocation":"6212:22:4","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"6234:2:4"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"totalYield","nameLocation":"6268:10:4","nodeType":"VariableDeclaration","scope":918,"src":"6260:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"6260:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6259:20:4"},"scope":1000,"src":"6203:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"6286:127:4","text":" @dev Harvests yield from the underlying protocol\n @return yieldHarvested The amount of yield harvested"},"functionSelector":"e8d991d1","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"harvestYield","nameLocation":"6427:12:4","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"6439:2:4"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"yieldHarvested","nameLocation":"6468:14:4","nodeType":"VariableDeclaration","scope":924,"src":"6460:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"6460:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6459:24:4"},"scope":1000,"src":"6418:66:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"7184:145:4","text":" @dev Converts assets to shares\n @param assets The amount of assets\n @return shares The equivalent number of shares"},"functionSelector":"c6e6f592","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"7343:15:4","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"assets","nameLocation":"7367:6:4","nodeType":"VariableDeclaration","scope":932,"src":"7359:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"7359:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7358:16:4"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"shares","nameLocation":"7406:6:4","nodeType":"VariableDeclaration","scope":932,"src":"7398:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7398:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7397:16:4"},"scope":1000,"src":"7334:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"7420:145:4","text":" @dev Converts shares to assets\n @param shares The number of shares\n @return assets The equivalent amount of assets"},"functionSelector":"07a2d13a","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"7579:15:4","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"shares","nameLocation":"7603:6:4","nodeType":"VariableDeclaration","scope":940,"src":"7595:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7595:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7594:16:4"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"assets","nameLocation":"7642:6:4","nodeType":"VariableDeclaration","scope":940,"src":"7634:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"7634:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7633:16:4"},"scope":1000,"src":"7570:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"7656:137:4","text":" @dev Gets the user's share balance\n @param user The user address\n @return balance The user's share balance"},"functionSelector":"70a08231","id":948,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"7807:9:4","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"user","nameLocation":"7825:4:4","nodeType":"VariableDeclaration","scope":948,"src":"7817:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"7817:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7816:14:4"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"balance","nameLocation":"7862:7:4","nodeType":"VariableDeclaration","scope":948,"src":"7854:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"7854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7853:17:4"},"scope":1000,"src":"7798:73:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"8574:115:4","text":" @dev Gets comprehensive strategy information\n @return info The strategy information struct"},"functionSelector":"9613092d","id":955,"implemented":false,"kind":"function","modifiers":[],"name":"getStrategyInfo","nameLocation":"8703:15:4","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"8718:2:4"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"info","nameLocation":"8764:4:4","nodeType":"VariableDeclaration","scope":955,"src":"8744:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyInfo_$874_memory_ptr","typeString":"struct IYieldStrategy.StrategyInfo"},"typeName":{"id":952,"nodeType":"UserDefinedTypeName","pathNode":{"id":951,"name":"StrategyInfo","nameLocations":["8744:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":874,"src":"8744:12:4"},"referencedDeclaration":874,"src":"8744:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyInfo_$874_storage_ptr","typeString":"struct IYieldStrategy.StrategyInfo"}},"visibility":"internal"}],"src":"8743:26:4"},"scope":1000,"src":"8694:76:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"8776:127:4","text":" @dev Gets the underlying asset address\n @return asset The address of the underlying asset (e.g., USDC)"},"functionSelector":"38d52e0f","id":961,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"8917:5:4","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"8922:2:4"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"asset","nameLocation":"8956:5:4","nodeType":"VariableDeclaration","scope":961,"src":"8948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"8948:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8947:15:4"},"scope":1000,"src":"8908:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"8969:138:4","text":" @dev Gets the total assets under management\n @return totalManagedAssets The total assets managed by this strategy"},"functionSelector":"01e1d114","id":967,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"9121:11:4","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"9132:2:4"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"totalManagedAssets","nameLocation":"9166:18:4","nodeType":"VariableDeclaration","scope":967,"src":"9158:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9157:28:4"},"scope":1000,"src":"9112:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"9192:117:4","text":" @dev Gets the strategy's risk score\n @return risk The risk score from 1-10 (1 = lowest risk)"},"functionSelector":"2b35f739","id":973,"implemented":false,"kind":"function","modifiers":[],"name":"getRiskScore","nameLocation":"9323:12:4","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"9335:2:4"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"risk","nameLocation":"9369:4:4","nodeType":"VariableDeclaration","scope":973,"src":"9361:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9361:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9360:14:4"},"scope":1000,"src":"9314:61:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"10069:192:4","text":" @dev Gets historical performance data\n @param period The time period to look back (in seconds)\n @return performance The performance data for the specified period"},"functionSelector":"3fd18893","id":981,"implemented":false,"kind":"function","modifiers":[],"name":"getPerformanceData","nameLocation":"10275:18:4","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"period","nameLocation":"10302:6:4","nodeType":"VariableDeclaration","scope":981,"src":"10294:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"10294:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10293:16:4"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"performance","nameLocation":"10341:11:4","nodeType":"VariableDeclaration","scope":981,"src":"10333:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10332:21:4"},"scope":1000,"src":"10266:88:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"10360:131:4","text":" @dev Checks if the strategy is profitable\n @return profitable Whether the strategy is currently profitable"},"functionSelector":"3612ddda","id":987,"implemented":false,"kind":"function","modifiers":[],"name":"isProfitable","nameLocation":"10505:12:4","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"10517:2:4"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"profitable","nameLocation":"10548:10:4","nodeType":"VariableDeclaration","scope":987,"src":"10543:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":984,"name":"bool","nodeType":"ElementaryTypeName","src":"10543:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10542:17:4"},"scope":1000,"src":"10496:64:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"10566:145:4","text":" @dev Gets the maximum capacity of the strategy\n @return maxCapacity The maximum amount of assets the strategy can handle"},"functionSelector":"59b6a0c9","id":993,"implemented":false,"kind":"function","modifiers":[],"name":"maxCapacity","nameLocation":"10725:11:4","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"10736:2:4"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"maxCapacity","nameLocation":"10770:11:4","nodeType":"VariableDeclaration","scope":993,"src":"10762:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10761:21:4"},"scope":1000,"src":"10716:67:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"10789:136:4","text":" @dev Gets the current utilization rate\n @return utilization The utilization rate as a percentage (basis points)"},"functionSelector":"6c321c8a","id":999,"implemented":false,"kind":"function","modifiers":[],"name":"utilizationRate","nameLocation":"10939:15:4","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"10954:2:4"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"utilization","nameLocation":"10988:11:4","nodeType":"VariableDeclaration","scope":999,"src":"10980:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"10980:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10979:21:4"},"scope":1000,"src":"10930:71:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1001,"src":"262:10741:4","usedErrors":[],"usedEvents":[831,840,847,856]}],"src":"32:10971:4"},"id":4},"src/mocks/MockYieldStrategy.sol":{"ast":{"absolutePath":"src/mocks/MockYieldStrategy.sol","exportedSymbols":{"Address":[819],"IERC20":[77],"IERC20Permit":[113],"IYieldStrategy":[1000],"MockYieldStrategy":[1508],"SafeERC20":[489]},"id":1509,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"src/interfaces/IYieldStrategy.sol","file":"../interfaces/IYieldStrategy.sol","id":1003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1509,"sourceUnit":1001,"src":"58:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1509,"sourceUnit":78,"src":"101:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1509,"sourceUnit":490,"src":"158:65:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1007,"name":"IYieldStrategy","nameLocations":["340:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"340:14:5"},"id":1008,"nodeType":"InheritanceSpecifier","src":"340:14:5"}],"canonicalName":"MockYieldStrategy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"225:84:5","text":" @title MockYieldStrategy\n @dev Mock yield strategy for testing purposes"},"fullyImplemented":true,"id":1508,"linearizedBaseContracts":[1508,1000],"name":"MockYieldStrategy","nameLocation":"319:17:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1012,"libraryName":{"id":1009,"name":"SafeERC20","nameLocations":["367:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"367:9:5"},"nodeType":"UsingForDirective","src":"361:27:5","typeName":{"id":1011,"nodeType":"UserDefinedTypeName","pathNode":{"id":1010,"name":"IERC20","nameLocations":["381:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"381:6:5"},"referencedDeclaration":77,"src":"381:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}},{"baseFunctions":[961],"constant":false,"functionSelector":"38d52e0f","id":1015,"mutability":"immutable","name":"asset","nameLocation":"428:5:5","nodeType":"VariableDeclaration","overrides":{"id":1014,"nodeType":"OverrideSpecifier","overrides":[],"src":"419:8:5"},"scope":1508,"src":"394:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"394:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":1017,"mutability":"mutable","name":"_name","nameLocation":"454:5:5","nodeType":"VariableDeclaration","scope":1508,"src":"439:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1016,"name":"string","nodeType":"ElementaryTypeName","src":"439:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1019,"mutability":"mutable","name":"_totalAssets","nameLocation":"481:12:5","nodeType":"VariableDeclaration","scope":1508,"src":"465:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1021,"mutability":"mutable","name":"_totalShares","nameLocation":"515:12:5","nodeType":"VariableDeclaration","scope":1508,"src":"499:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"499:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1023,"mutability":"mutable","name":"_userYield","nameLocation":"549:10:5","nodeType":"VariableDeclaration","scope":1508,"src":"533:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1026,"mutability":"mutable","name":"_currentAPY","nameLocation":"581:11:5","nodeType":"VariableDeclaration","scope":1508,"src":"565:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343030","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"595:3:5","typeDescriptions":{"typeIdentifier":"t_rational_400_by_1","typeString":"int_const 400"},"value":"400"},"visibility":"private"},{"constant":false,"id":1029,"mutability":"mutable","name":"_shouldFail","nameLocation":"631:11:5","nodeType":"VariableDeclaration","scope":1508,"src":"618:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1027,"name":"bool","nodeType":"ElementaryTypeName","src":"618:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"645:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"private"},{"constant":false,"id":1033,"mutability":"mutable","name":"_balances","nameLocation":"693:9:5","nodeType":"VariableDeclaration","scope":1508,"src":"657:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1032,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"657:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1046,"nodeType":"Block","src":"737:64:5","statements":[{"expression":{"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1038,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"747:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1039,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"755:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"747:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1041,"nodeType":"ExpressionStatement","src":"747:14:5"},{"expression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1042,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"771:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4d6f636b205374726174656779","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"779:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_642b64463632331d7348260a6e8630d521deef2c25a777824803b0f63b950e8c","typeString":"literal_string \"Mock Strategy\""},"value":"Mock Strategy"},"src":"771:23:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1045,"nodeType":"ExpressionStatement","src":"771:23:5"}]},"id":1047,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"_asset","nameLocation":"729:6:5","nodeType":"VariableDeclaration","scope":1047,"src":"721:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"720:16:5"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"737:0:5"},"scope":1508,"src":"709:92:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1056,"nodeType":"Block","src":"883:36:5","statements":[{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1052,"name":"_userYield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"893:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"906:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"893:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ExpressionStatement","src":"893:19:5"}]},"functionSelector":"8b66268c","id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"setUserYield","nameLocation":"845:12:5","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"amount","nameLocation":"866:6:5","nodeType":"VariableDeclaration","scope":1057,"src":"858:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"857:16:5"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"883:0:5"},"scope":1508,"src":"836:83:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1066,"nodeType":"Block","src":"974:41:5","statements":[{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1062,"name":"_shouldFail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"984:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1063,"name":"shouldFail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"998:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"984:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1065,"nodeType":"ExpressionStatement","src":"984:24:5"}]},"functionSelector":"a5aa5c12","id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"setShouldFail","nameLocation":"934:13:5","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"shouldFail","nameLocation":"953:10:5","nodeType":"VariableDeclaration","scope":1067,"src":"948:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1058,"name":"bool","nodeType":"ElementaryTypeName","src":"948:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"947:17:5"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"974:0:5"},"scope":1508,"src":"925:90:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1076,"nodeType":"Block","src":"1066:34:5","statements":[{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1072,"name":"_currentAPY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"1076:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1073,"name":"apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"1090:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1076:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ExpressionStatement","src":"1076:17:5"}]},"functionSelector":"39a24333","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"setCurrentAPY","nameLocation":"1030:13:5","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"apy","nameLocation":"1052:3:5","nodeType":"VariableDeclaration","scope":1077,"src":"1044:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:13:5"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"1066:0:5"},"scope":1508,"src":"1021:79:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1086,"nodeType":"Block","src":"1160:37:5","statements":[{"expression":{"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1082,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1170:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1083,"name":"strategyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1178:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1170:20:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1085,"nodeType":"ExpressionStatement","src":"1170:20:5"}]},"functionSelector":"c47f0027","id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"setName","nameLocation":"1115:7:5","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"strategyName","nameLocation":"1137:12:5","nodeType":"VariableDeclaration","scope":1087,"src":"1123:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1078,"name":"string","nodeType":"ElementaryTypeName","src":"1123:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1122:28:5"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"1160:0:5"},"scope":1508,"src":"1106:91:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1094,"nodeType":"Block","src":"1309:29:5","statements":[{"expression":{"id":1092,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1326:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1091,"id":1093,"nodeType":"Return","src":"1319:12:5"}]},"functionSelector":"06fdde03","id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1264:4:5","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"1268:2:5"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"1294:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1089,"name":"string","nodeType":"ElementaryTypeName","src":"1294:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1293:15:5"},"scope":1508,"src":"1255:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1102,"nodeType":"Block","src":"1398:35:5","statements":[{"expression":{"id":1100,"name":"_currentAPY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"1415:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1099,"id":1101,"nodeType":"Return","src":"1408:18:5"}]},"functionSelector":"9a79d32b","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"currentAPY","nameLocation":"1353:10:5","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"1363:2:5"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"1389:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1388:9:5"},"scope":1508,"src":"1344:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1110,"nodeType":"Block","src":"1497:36:5","statements":[{"expression":{"id":1108,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1514:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1107,"id":1109,"nodeType":"Return","src":"1507:19:5"}]},"functionSelector":"ff50abdc","id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"totalDeposited","nameLocation":"1448:14:5","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[],"src":"1462:2:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"1488:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1487:9:5"},"scope":1508,"src":"1439:94:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1146,"nodeType":"Block","src":"1637:276:5","statements":[{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"annualYield","nameLocation":"1745:11:5","nodeType":"VariableDeclaration","scope":1146,"src":"1737:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"1760:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1123,"name":"_currentAPY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"1772:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1760:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1759:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:5:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"1759:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1737:55:5"},{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"secondsInYear","nameLocation":"1810:13:5","nodeType":"VariableDeclaration","scope":1146,"src":"1802:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1138,"initialValue":{"commonType":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_525600_by_1","typeString":"int_const 525600"},"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_8760_by_1","typeString":"int_const 8760"},"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"333635","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1826:3:5","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3234","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1832:2:5","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"1826:8:5","typeDescriptions":{"typeIdentifier":"t_rational_8760_by_1","typeString":"int_const 8760"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1837:2:5","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1826:13:5","typeDescriptions":{"typeIdentifier":"t_rational_525600_by_1","typeString":"int_const 525600"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1842:2:5","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1826:18:5","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"}},"nodeType":"VariableDeclarationStatement","src":"1802:42:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"annualYield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"1862:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1140,"name":"timeInSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"1876:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1862:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1861:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1143,"name":"secondsInYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1893:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1861:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1145,"nodeType":"Return","src":"1854:52:5"}]},"functionSelector":"043cbe5b","id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"calculateYield","nameLocation":"1548:14:5","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"principal","nameLocation":"1571:9:5","nodeType":"VariableDeclaration","scope":1147,"src":"1563:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"timeInSeconds","nameLocation":"1590:13:5","nodeType":"VariableDeclaration","scope":1147,"src":"1582:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1582:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1562:42:5"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"1628:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1627:9:5"},"scope":1508,"src":"1539:374:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[882],"body":{"id":1198,"nodeType":"Block","src":"2032:312:5","statements":[{"expression":{"arguments":[{"expression":{"id":1159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2073:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2077:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2073:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1163,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2093:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MockYieldStrategy_$1508","typeString":"contract MockYieldStrategy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockYieldStrategy_$1508","typeString":"contract MockYieldStrategy"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2085:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:5","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2100:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1156,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2049:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1155,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2042:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:16:5","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":173,"src":"2042:30:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"2042:65:5"},{"expression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1168,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2126:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1170,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2151:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1169,"name":"convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"2135:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ExpressionStatement","src":"2126:32:5"},{"expression":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1174,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2168:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1177,"indexExpression":{"expression":{"id":1175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2178:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2182:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2178:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2168:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1178,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2193:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2168:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1180,"nodeType":"ExpressionStatement","src":"2168:31:5"},{"expression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1181,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2209:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1182,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2225:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2209:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ExpressionStatement","src":"2209:22:5"},{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1185,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2241:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1186,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2257:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2241:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1188,"nodeType":"ExpressionStatement","src":"2241:22:5"},{"eventCall":{"arguments":[{"expression":{"id":1190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2287:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2291:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2287:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2299:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1193,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2307:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2279:7:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"EmitStatement","src":"2274:40:5"},{"expression":{"id":1196,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2331:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1154,"id":1197,"nodeType":"Return","src":"2324:13:5"}]},"functionSelector":"b6b55f25","id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1965:7:5","nodeType":"FunctionDefinition","overrides":{"id":1151,"nodeType":"OverrideSpecifier","overrides":[],"src":"1998:8:5"},"parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"amount","nameLocation":"1981:6:5","nodeType":"VariableDeclaration","scope":1199,"src":"1973:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1972:16:5"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"shares","nameLocation":"2024:6:5","nodeType":"VariableDeclaration","scope":1199,"src":"2016:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2015:16:5"},"scope":1508,"src":"1956:388:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[890],"body":{"id":1256,"nodeType":"Block","src":"2427:370:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1208,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2445:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1211,"indexExpression":{"expression":{"id":1209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2455:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2459:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2455:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1212,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2470:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2445:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420736861726573","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2478:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""},"value":"Insufficient shares"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665","typeString":"literal_string \"Insufficient shares\""}],"id":1207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2437:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2437:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"2437:63:5"},{"expression":{"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1217,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2519:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1219,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2544:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"name":"convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2528:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2519:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1222,"nodeType":"ExpressionStatement","src":"2519:32:5"},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1223,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2561:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1226,"indexExpression":{"expression":{"id":1224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2571:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2575:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2571:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2561:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1227,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2586:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2561:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"2561:31:5"},{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1230,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2602:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1231,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2602:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ExpressionStatement","src":"2602:22:5"},{"expression":{"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1234,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2634:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1235,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2650:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1237,"nodeType":"ExpressionStatement","src":"2634:22:5"},{"expression":{"arguments":[{"expression":{"id":1242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2694:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2698:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2694:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2706:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1239,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2674:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1238,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2667:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2667:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2681:12:5","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":146,"src":"2667:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2667:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"ExpressionStatement","src":"2667:46:5"},{"eventCall":{"arguments":[{"expression":{"id":1248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2740:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2744:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2740:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1250,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2752:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1251,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2760:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1247,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2729:10:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"EmitStatement","src":"2724:43:5"},{"expression":{"id":1254,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2784:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1206,"id":1255,"nodeType":"Return","src":"2777:13:5"}]},"functionSelector":"2e1a7d4d","id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2359:8:5","nodeType":"FunctionDefinition","overrides":{"id":1203,"nodeType":"OverrideSpecifier","overrides":[],"src":"2393:8:5"},"parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"shares","nameLocation":"2376:6:5","nodeType":"VariableDeclaration","scope":1257,"src":"2368:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2367:16:5"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"amount","nameLocation":"2419:6:5","nodeType":"VariableDeclaration","scope":1257,"src":"2411:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2411:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2410:16:5"},"scope":1508,"src":"2350:447:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[898],"body":{"id":1307,"nodeType":"Block","src":"2887:310:5","statements":[{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"userShares","nameLocation":"2905:10:5","nodeType":"VariableDeclaration","scope":1307,"src":"2897:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1270,"initialValue":{"baseExpression":{"id":1267,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2918:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1269,"indexExpression":{"id":1268,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2928:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2918:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2897:36:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2947:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2961:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2947:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"nodeType":"IfStatement","src":"2943:29:5","trueBody":{"expression":{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2971:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1264,"id":1275,"nodeType":"Return","src":"2964:8:5"}},{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1277,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2983:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1279,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3008:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2992:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2992:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2983:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1282,"nodeType":"ExpressionStatement","src":"2983:36:5"},{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1283,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3029:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1285,"indexExpression":{"id":1284,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"3039:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3029:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3047:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3029:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"3029:19:5"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1289,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3058:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1290,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3074:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3058:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"3058:26:5"},{"expression":{"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1293,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3094:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1294,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"3110:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3094:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1296,"nodeType":"ExpressionStatement","src":"3094:22:5"},{"expression":{"arguments":[{"id":1301,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"3154:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"3160:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1298,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3134:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"3127:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3127:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:12:5","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":146,"src":"3127:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3127:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"ExpressionStatement","src":"3127:40:5"},{"expression":{"id":1305,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"3184:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1264,"id":1306,"nodeType":"Return","src":"3177:13:5"}]},"functionSelector":"6ff1c9bc","id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"2812:17:5","nodeType":"FunctionDefinition","overrides":{"id":1261,"nodeType":"OverrideSpecifier","overrides":[],"src":"2853:8:5"},"parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"user","nameLocation":"2838:4:5","nodeType":"VariableDeclaration","scope":1308,"src":"2830:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"2830:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2829:14:5"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"amount","nameLocation":"2879:6:5","nodeType":"VariableDeclaration","scope":1308,"src":"2871:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2870:16:5"},"scope":1508,"src":"2803:394:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[904],"body":{"id":1316,"nodeType":"Block","src":"3269:35:5","statements":[{"expression":{"id":1314,"name":"_currentAPY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3286:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1313,"id":1315,"nodeType":"Return","src":"3279:18:5"}]},"functionSelector":"962ca496","id":1317,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentAPY","nameLocation":"3212:13:5","nodeType":"FunctionDefinition","overrides":{"id":1310,"nodeType":"OverrideSpecifier","overrides":[],"src":"3242:8:5"},"parameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"3225:2:5"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"3260:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3259:9:5"},"scope":1508,"src":"3203:101:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[912],"body":{"id":1334,"nodeType":"Block","src":"3393:116:5","statements":[{"condition":{"id":1325,"name":"_shouldFail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3407:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1331,"nodeType":"IfStatement","src":"3403:73:5","trueBody":{"id":1330,"nodeType":"Block","src":"3420:56:5","statements":[{"expression":{"arguments":[{"hexValue":"4d6f636b207374726174656779206661696c757265","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3441:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7284f7fc0181ca6b034b3a87ee90ece795f4ad76e61a44e5e26e2342f0754a9c","typeString":"literal_string \"Mock strategy failure\""},"value":"Mock strategy failure"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7284f7fc0181ca6b034b3a87ee90ece795f4ad76e61a44e5e26e2342f0754a9c","typeString":"literal_string \"Mock strategy failure\""}],"id":1326,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3434:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"3434:31:5"}]}},{"expression":{"id":1332,"name":"_userYield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3492:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1324,"id":1333,"nodeType":"Return","src":"3485:17:5"}]},"functionSelector":"6f7c99d2","id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"calculateUserYield","nameLocation":"3319:18:5","nodeType":"FunctionDefinition","overrides":{"id":1321,"nodeType":"OverrideSpecifier","overrides":[],"src":"3366:8:5"},"parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"user","nameLocation":"3346:4:5","nodeType":"VariableDeclaration","scope":1335,"src":"3338:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"3338:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3337:14:5"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"3384:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:9:5"},"scope":1508,"src":"3310:199:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[918],"body":{"id":1343,"nodeType":"Block","src":"3590:34:5","statements":[{"expression":{"id":1341,"name":"_userYield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3607:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1340,"id":1342,"nodeType":"Return","src":"3600:17:5"}]},"functionSelector":"39c1a8e8","id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalYieldGenerated","nameLocation":"3524:22:5","nodeType":"FunctionDefinition","overrides":{"id":1337,"nodeType":"OverrideSpecifier","overrides":[],"src":"3563:8:5"},"parameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"3546:2:5"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"3581:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3580:9:5"},"scope":1508,"src":"3515:109:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[924],"body":{"id":1357,"nodeType":"Block","src":"3690:89:5","statements":[{"eventCall":{"arguments":[{"id":1351,"name":"_userYield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3720:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1352,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3732:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"name":"YieldHarvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3705:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"EmitStatement","src":"3700:45:5"},{"expression":{"id":1355,"name":"_userYield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3762:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1349,"id":1356,"nodeType":"Return","src":"3755:17:5"}]},"functionSelector":"e8d991d1","id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"harvestYield","nameLocation":"3639:12:5","nodeType":"FunctionDefinition","overrides":{"id":1346,"nodeType":"OverrideSpecifier","overrides":[],"src":"3663:8:5"},"parameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"3651:2:5"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1358,"src":"3681:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3680:9:5"},"scope":1508,"src":"3630:149:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[932],"body":{"id":1379,"nodeType":"Block","src":"3865:108:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3879:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3895:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3879:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"3875:36:5","trueBody":{"expression":{"id":1369,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3905:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1365,"id":1370,"nodeType":"Return","src":"3898:13:5"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3929:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1373,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3938:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3929:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1376,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3954:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3928:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1365,"id":1378,"nodeType":"Return","src":"3921:45:5"}]},"functionSelector":"c6e6f592","id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"3794:15:5","nodeType":"FunctionDefinition","overrides":{"id":1362,"nodeType":"OverrideSpecifier","overrides":[],"src":"3838:8:5"},"parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"assets","nameLocation":"3818:6:5","nodeType":"VariableDeclaration","scope":1380,"src":"3810:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3810:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3809:16:5"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"3856:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3856:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3855:9:5"},"scope":1508,"src":"3785:188:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[940],"body":{"id":1401,"nodeType":"Block","src":"4059:108:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4073:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4089:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4073:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"IfStatement","src":"4069:36:5","trueBody":{"expression":{"id":1391,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4099:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1387,"id":1392,"nodeType":"Return","src":"4092:13:5"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4123:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1395,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4132:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4123:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4122:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1398,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4148:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4122:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1387,"id":1400,"nodeType":"Return","src":"4115:45:5"}]},"functionSelector":"07a2d13a","id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"3988:15:5","nodeType":"FunctionDefinition","overrides":{"id":1384,"nodeType":"OverrideSpecifier","overrides":[],"src":"4032:8:5"},"parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"shares","nameLocation":"4012:6:5","nodeType":"VariableDeclaration","scope":1402,"src":"4004:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:16:5"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"4050:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4049:9:5"},"scope":1508,"src":"3979:188:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[948],"body":{"id":1414,"nodeType":"Block","src":"4247:39:5","statements":[{"expression":{"baseExpression":{"id":1410,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4264:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1412,"indexExpression":{"id":1411,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"4274:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4264:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1409,"id":1413,"nodeType":"Return","src":"4257:22:5"}]},"functionSelector":"70a08231","id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4182:9:5","nodeType":"FunctionDefinition","overrides":{"id":1406,"nodeType":"OverrideSpecifier","overrides":[],"src":"4220:8:5"},"parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"user","nameLocation":"4200:4:5","nodeType":"VariableDeclaration","scope":1415,"src":"4192:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4191:14:5"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1415,"src":"4238:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"4238:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4237:9:5"},"scope":1508,"src":"4173:113:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[955],"body":{"id":1434,"nodeType":"Block","src":"4372:352:5","statements":[{"expression":{"arguments":[{"hexValue":"4d6f636b205374726174656779","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4422:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_642b64463632331d7348260a6e8630d521deef2c25a777824803b0f63b950e8c","typeString":"literal_string \"Mock Strategy\""},"value":"Mock Strategy"},{"hexValue":"4d6f636b207969656c6420737472617465677920666f722074657374696e67","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4464:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2c9f6a1ee48cab39435e821deccc8e289cf073b2afae7caca337dc07ccf9755","typeString":"literal_string \"Mock yield strategy for testing\""},"value":"Mock yield strategy for testing"},{"id":1425,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4524:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1426,"name":"_totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4563:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1427,"name":"_currentAPY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"4601:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4637:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"expression":{"id":1429,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4665:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4671:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"4665:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4702:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_642b64463632331d7348260a6e8630d521deef2c25a777824803b0f63b950e8c","typeString":"literal_string \"Mock Strategy\""},{"typeIdentifier":"t_stringliteral_d2c9f6a1ee48cab39435e821deccc8e289cf073b2afae7caca337dc07ccf9755","typeString":"literal_string \"Mock yield strategy for testing\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1422,"name":"StrategyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"4389:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StrategyInfo_$874_storage_ptr_$","typeString":"type(struct IYieldStrategy.StrategyInfo storage pointer)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4416:4:5","4451:11:5","4511:11:5","4550:11:5","4589:10:5","4626:9:5","4652:11:5","4694:6:5"],"names":["name","description","totalAssets","totalShares","currentAPY","riskScore","lastHarvest","active"],"nodeType":"FunctionCall","src":"4389:328:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyInfo_$874_memory_ptr","typeString":"struct IYieldStrategy.StrategyInfo memory"}},"functionReturnParameters":1421,"id":1433,"nodeType":"Return","src":"4382:335:5"}]},"functionSelector":"9613092d","id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"getStrategyInfo","nameLocation":"4301:15:5","nodeType":"FunctionDefinition","overrides":{"id":1417,"nodeType":"OverrideSpecifier","overrides":[],"src":"4333:8:5"},"parameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"4316:2:5"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"4351:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyInfo_$874_memory_ptr","typeString":"struct IYieldStrategy.StrategyInfo"},"typeName":{"id":1419,"nodeType":"UserDefinedTypeName","pathNode":{"id":1418,"name":"StrategyInfo","nameLocations":["4351:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":874,"src":"4351:12:5"},"referencedDeclaration":874,"src":"4351:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyInfo_$874_storage_ptr","typeString":"struct IYieldStrategy.StrategyInfo"}},"visibility":"internal"}],"src":"4350:21:5"},"scope":1508,"src":"4292:432:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[967],"body":{"id":1443,"nodeType":"Block","src":"4794:36:5","statements":[{"expression":{"id":1441,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4811:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1440,"id":1442,"nodeType":"Return","src":"4804:19:5"}]},"functionSelector":"01e1d114","id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"4739:11:5","nodeType":"FunctionDefinition","overrides":{"id":1437,"nodeType":"OverrideSpecifier","overrides":[],"src":"4767:8:5"},"parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"4750:2:5"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"4785:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"4785:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:9:5"},"scope":1508,"src":"4730:100:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[973],"body":{"id":1452,"nodeType":"Block","src":"4901:25:5","statements":[{"expression":{"hexValue":"31","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4918:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":1449,"id":1451,"nodeType":"Return","src":"4911:8:5"}]},"functionSelector":"2b35f739","id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"getRiskScore","nameLocation":"4845:12:5","nodeType":"FunctionDefinition","overrides":{"id":1446,"nodeType":"OverrideSpecifier","overrides":[],"src":"4874:8:5"},"parameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"4857:2:5"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"4892:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4892:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4891:9:5"},"scope":1508,"src":"4836:90:5","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[981],"body":{"id":1463,"nodeType":"Block","src":"5010:35:5","statements":[{"expression":{"id":1461,"name":"_currentAPY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"5027:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1460,"id":1462,"nodeType":"Return","src":"5020:18:5"}]},"functionSelector":"3fd18893","id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"getPerformanceData","nameLocation":"4941:18:5","nodeType":"FunctionDefinition","overrides":{"id":1457,"nodeType":"OverrideSpecifier","overrides":[],"src":"4983:8:5"},"parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"4960:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4959:9:5"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"5001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5000:9:5"},"scope":1508,"src":"4932:113:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[987],"body":{"id":1472,"nodeType":"Block","src":"5113:28:5","statements":[{"expression":{"hexValue":"74727565","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5130:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1469,"id":1471,"nodeType":"Return","src":"5123:11:5"}]},"functionSelector":"3612ddda","id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"isProfitable","nameLocation":"5060:12:5","nodeType":"FunctionDefinition","overrides":{"id":1466,"nodeType":"OverrideSpecifier","overrides":[],"src":"5089:8:5"},"parameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"5072:2:5"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"5107:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1467,"name":"bool","nodeType":"ElementaryTypeName","src":"5107:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5106:6:5"},"scope":1508,"src":"5051:90:5","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[993],"body":{"id":1485,"nodeType":"Block","src":"5211:41:5","statements":[{"expression":{"expression":{"arguments":[{"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5233:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5233:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5228:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5242:3:5","memberName":"max","nodeType":"MemberAccess","src":"5228:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1478,"id":1484,"nodeType":"Return","src":"5221:24:5"}]},"functionSelector":"59b6a0c9","id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"maxCapacity","nameLocation":"5156:11:5","nodeType":"FunctionDefinition","overrides":{"id":1475,"nodeType":"OverrideSpecifier","overrides":[],"src":"5184:8:5"},"parameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"5167:2:5"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"5202:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"5202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5201:9:5"},"scope":1508,"src":"5147:105:5","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[999],"body":{"id":1506,"nodeType":"Block","src":"5326:90:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1492,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5343:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5343:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5408:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5343:66:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5363:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:5:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5363:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5362:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5387:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_MockYieldStrategy_$1508","typeString":"contract MockYieldStrategy"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5392:11:5","memberName":"maxCapacity","nodeType":"MemberAccess","referencedDeclaration":1486,"src":"5387:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_uint256_$","typeString":"function () pure external returns (uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5387:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1491,"id":1505,"nodeType":"Return","src":"5336:73:5"}]},"functionSelector":"6c321c8a","id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"utilizationRate","nameLocation":"5267:15:5","nodeType":"FunctionDefinition","overrides":{"id":1488,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:5"},"parameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"5282:2:5"},"returnParameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1507,"src":"5317:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"5317:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5316:9:5"},"scope":1508,"src":"5258:158:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1509,"src":"310:5108:5","usedErrors":[],"usedEvents":[831,840,847,856]}],"src":"32:5386:5"},"id":5}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be2a5b4afb5e9ece7c2b05c9b631198c7b2dc325701cdcc2369ea8b6afff627064736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0x2A JUMPDEST 0x4A 0xFB 0x5E SWAP15 0xCE PUSH29 0x2B05C9B631198C7B2DC325701CDCC2369EA8B6AFFF627064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:2:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220be2a5b4afb5e9ece7c2b05c9b631198c7b2dc325701cdcc2369ea8b6afff627064736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0x2A JUMPDEST 0x4A 0xFB 0x5E SWAP15 0xCE PUSH29 0x2B05C9B631198C7B2DC325701CDCC2369EA8B6AFFF627064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:2:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c7d426e3ab85b12ac7044cec483a4df740074c9828a7f0e0413a45beac18025c64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xD4 0x26 0xE3 0xAB DUP6 0xB1 0x2A 0xC7 DIV 0x4C 0xEC BASEFEE GASPRICE 0x4D 0xF7 BLOCKHASH SMOD 0x4C SWAP9 0x28 0xA7 CREATE 0xE0 COINBASE GASPRICE GASLIMIT 0xBE 0xAC XOR MUL 0x5C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c7d426e3ab85b12ac7044cec483a4df740074c9828a7f0e0413a45beac18025c64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xD4 0x26 0xE3 0xAB DUP6 0xB1 0x2A 0xC7 DIV 0x4C 0xEC BASEFEE GASPRICE 0x4D 0xF7 BLOCKHASH SMOD 0x4C SWAP9 0x28 0xA7 CREATE 0xE0 COINBASE GASPRICE GASLIMIT 0xBE 0xAC XOR MUL 0x5C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:3:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/interfaces/IYieldStrategy.sol":{"IYieldStrategy":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"parameter","type":"string"},{"indexed":false,"internalType":"uint256","name":"oldValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"StrategyUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"yieldAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotalAssets","type":"uint256"}],"name":"YieldHarvested","type":"event"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"asset","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"calculateUserYield","outputs":[{"internalType":"uint256","name":"yieldAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"emergencyWithdraw","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentAPY","outputs":[{"internalType":"uint256","name":"apy","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"}],"name":"getPerformanceData","outputs":[{"internalType":"uint256","name":"performance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRiskScore","outputs":[{"internalType":"uint256","name":"risk","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStrategyInfo","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"totalAssets","type":"uint256"},{"internalType":"uint256","name":"totalShares","type":"uint256"},{"internalType":"uint256","name":"currentAPY","type":"uint256"},{"internalType":"uint256","name":"riskScore","type":"uint256"},{"internalType":"uint256","name":"lastHarvest","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct IYieldStrategy.StrategyInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalYieldGenerated","outputs":[{"internalType":"uint256","name":"totalYield","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvestYield","outputs":[{"internalType":"uint256","name":"yieldHarvested","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isProfitable","outputs":[{"internalType":"bool","name":"profitable","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxCapacity","outputs":[{"internalType":"uint256","name":"maxCapacity","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"utilizationRate","outputs":[{"internalType":"uint256","name":"utilization","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"YieldRails Team","details":"Interface for yield generation strategies in YieldRails","events":{"Deposit(address,uint256,uint256)":{"details":"Emitted when funds are deposited into the strategy","params":{"amount":"The amount deposited","shares":"The number of shares minted","user":"The address that deposited funds"}},"StrategyUpdated(string,uint256,uint256)":{"details":"Emitted when strategy parameters are updated","params":{"newValue":"The new value","oldValue":"The old value","parameter":"The parameter that was updated"}},"Withdrawal(address,uint256,uint256)":{"details":"Emitted when funds are withdrawn from the strategy","params":{"amount":"The amount withdrawn","shares":"The number of shares burned","user":"The address that withdrew funds"}},"YieldHarvested(uint256,uint256)":{"details":"Emitted when yield is harvested","params":{"newTotalAssets":"The new total assets under management","yieldAmount":"The amount of yield harvested"}}},"kind":"dev","methods":{"asset()":{"details":"Gets the underlying asset address","returns":{"asset":"The address of the underlying asset (e.g., USDC)"}},"balanceOf(address)":{"details":"Gets the user's share balance","params":{"user":"The user address"},"returns":{"balance":"The user's share balance"}},"calculateUserYield(address)":{"details":"Calculates yield generated for a specific user","params":{"user":"The user address"},"returns":{"yieldAmount":"The amount of yield generated"}},"convertToAssets(uint256)":{"details":"Converts shares to assets","params":{"shares":"The number of shares"},"returns":{"assets":"The equivalent amount of assets"}},"convertToShares(uint256)":{"details":"Converts assets to shares","params":{"assets":"The amount of assets"},"returns":{"shares":"The equivalent number of shares"}},"deposit(uint256)":{"details":"Deposits assets into the yield strategy","params":{"amount":"The amount of assets to deposit"},"returns":{"shares":"The number of shares minted to the depositor"}},"emergencyWithdraw(address)":{"details":"Emergency withdrawal of all user funds (may incur penalties)","params":{"user":"The address to withdraw funds for"},"returns":{"amount":"The amount of assets withdrawn"}},"getCurrentAPY()":{"details":"Calculates the current APY of the strategy","returns":{"apy":"The current APY in basis points"}},"getPerformanceData(uint256)":{"details":"Gets historical performance data","params":{"period":"The time period to look back (in seconds)"},"returns":{"performance":"The performance data for the specified period"}},"getRiskScore()":{"details":"Gets the strategy's risk score","returns":{"risk":"The risk score from 1-10 (1 = lowest risk)"}},"getStrategyInfo()":{"details":"Gets comprehensive strategy information","returns":{"info":"The strategy information struct"}},"getTotalYieldGenerated()":{"details":"Calculates the total yield generated by the strategy","returns":{"totalYield":"The total yield generated"}},"harvestYield()":{"details":"Harvests yield from the underlying protocol","returns":{"yieldHarvested":"The amount of yield harvested"}},"isProfitable()":{"details":"Checks if the strategy is profitable","returns":{"profitable":"Whether the strategy is currently profitable"}},"maxCapacity()":{"details":"Gets the maximum capacity of the strategy","returns":{"maxCapacity":"The maximum amount of assets the strategy can handle"}},"totalAssets()":{"details":"Gets the total assets under management","returns":{"totalManagedAssets":"The total assets managed by this strategy"}},"utilizationRate()":{"details":"Gets the current utilization rate","returns":{"utilization":"The utilization rate as a percentage (basis points)"}},"withdraw(uint256)":{"details":"Withdraws assets from the yield strategy","params":{"shares":"The number of shares to burn"},"returns":{"amount":"The amount of assets withdrawn"}}},"title":"IYieldStrategy","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"asset()":"38d52e0f","balanceOf(address)":"70a08231","calculateUserYield(address)":"6f7c99d2","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","deposit(uint256)":"b6b55f25","emergencyWithdraw(address)":"6ff1c9bc","getCurrentAPY()":"962ca496","getPerformanceData(uint256)":"3fd18893","getRiskScore()":"2b35f739","getStrategyInfo()":"9613092d","getTotalYieldGenerated()":"39c1a8e8","harvestYield()":"e8d991d1","isProfitable()":"3612ddda","maxCapacity()":"59b6a0c9","totalAssets()":"01e1d114","utilizationRate()":"6c321c8a","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"parameter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalAssets\",\"type\":\"uint256\"}],\"name\":\"YieldHarvested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateUserYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"getPerformanceData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"performance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRiskScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"risk\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"riskScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastHarvest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IYieldStrategy.StrategyInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalYieldGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalYield\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldHarvested\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isProfitable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"profitable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxCapacity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"utilization\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"YieldRails Team\",\"details\":\"Interface for yield generation strategies in YieldRails\",\"events\":{\"Deposit(address,uint256,uint256)\":{\"details\":\"Emitted when funds are deposited into the strategy\",\"params\":{\"amount\":\"The amount deposited\",\"shares\":\"The number of shares minted\",\"user\":\"The address that deposited funds\"}},\"StrategyUpdated(string,uint256,uint256)\":{\"details\":\"Emitted when strategy parameters are updated\",\"params\":{\"newValue\":\"The new value\",\"oldValue\":\"The old value\",\"parameter\":\"The parameter that was updated\"}},\"Withdrawal(address,uint256,uint256)\":{\"details\":\"Emitted when funds are withdrawn from the strategy\",\"params\":{\"amount\":\"The amount withdrawn\",\"shares\":\"The number of shares burned\",\"user\":\"The address that withdrew funds\"}},\"YieldHarvested(uint256,uint256)\":{\"details\":\"Emitted when yield is harvested\",\"params\":{\"newTotalAssets\":\"The new total assets under management\",\"yieldAmount\":\"The amount of yield harvested\"}}},\"kind\":\"dev\",\"methods\":{\"asset()\":{\"details\":\"Gets the underlying asset address\",\"returns\":{\"asset\":\"The address of the underlying asset (e.g., USDC)\"}},\"balanceOf(address)\":{\"details\":\"Gets the user's share balance\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"balance\":\"The user's share balance\"}},\"calculateUserYield(address)\":{\"details\":\"Calculates yield generated for a specific user\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"yieldAmount\":\"The amount of yield generated\"}},\"convertToAssets(uint256)\":{\"details\":\"Converts shares to assets\",\"params\":{\"shares\":\"The number of shares\"},\"returns\":{\"assets\":\"The equivalent amount of assets\"}},\"convertToShares(uint256)\":{\"details\":\"Converts assets to shares\",\"params\":{\"assets\":\"The amount of assets\"},\"returns\":{\"shares\":\"The equivalent number of shares\"}},\"deposit(uint256)\":{\"details\":\"Deposits assets into the yield strategy\",\"params\":{\"amount\":\"The amount of assets to deposit\"},\"returns\":{\"shares\":\"The number of shares minted to the depositor\"}},\"emergencyWithdraw(address)\":{\"details\":\"Emergency withdrawal of all user funds (may incur penalties)\",\"params\":{\"user\":\"The address to withdraw funds for\"},\"returns\":{\"amount\":\"The amount of assets withdrawn\"}},\"getCurrentAPY()\":{\"details\":\"Calculates the current APY of the strategy\",\"returns\":{\"apy\":\"The current APY in basis points\"}},\"getPerformanceData(uint256)\":{\"details\":\"Gets historical performance data\",\"params\":{\"period\":\"The time period to look back (in seconds)\"},\"returns\":{\"performance\":\"The performance data for the specified period\"}},\"getRiskScore()\":{\"details\":\"Gets the strategy's risk score\",\"returns\":{\"risk\":\"The risk score from 1-10 (1 = lowest risk)\"}},\"getStrategyInfo()\":{\"details\":\"Gets comprehensive strategy information\",\"returns\":{\"info\":\"The strategy information struct\"}},\"getTotalYieldGenerated()\":{\"details\":\"Calculates the total yield generated by the strategy\",\"returns\":{\"totalYield\":\"The total yield generated\"}},\"harvestYield()\":{\"details\":\"Harvests yield from the underlying protocol\",\"returns\":{\"yieldHarvested\":\"The amount of yield harvested\"}},\"isProfitable()\":{\"details\":\"Checks if the strategy is profitable\",\"returns\":{\"profitable\":\"Whether the strategy is currently profitable\"}},\"maxCapacity()\":{\"details\":\"Gets the maximum capacity of the strategy\",\"returns\":{\"maxCapacity\":\"The maximum amount of assets the strategy can handle\"}},\"totalAssets()\":{\"details\":\"Gets the total assets under management\",\"returns\":{\"totalManagedAssets\":\"The total assets managed by this strategy\"}},\"utilizationRate()\":{\"details\":\"Gets the current utilization rate\",\"returns\":{\"utilization\":\"The utilization rate as a percentage (basis points)\"}},\"withdraw(uint256)\":{\"details\":\"Withdraws assets from the yield strategy\",\"params\":{\"shares\":\"The number of shares to burn\"},\"returns\":{\"amount\":\"The amount of assets withdrawn\"}}},\"title\":\"IYieldStrategy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"All yield strategies must implement this interface for compatibility\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IYieldStrategy.sol\":\"IYieldStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IYieldStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IYieldStrategy\\n * @dev Interface for yield generation strategies in YieldRails\\n * @notice All yield strategies must implement this interface for compatibility\\n * @author YieldRails Team\\n */\\ninterface IYieldStrategy {\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // EVENTS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Emitted when funds are deposited into the strategy\\n     * @param user The address that deposited funds\\n     * @param amount The amount deposited\\n     * @param shares The number of shares minted\\n     */\\n    event Deposit(address indexed user, uint256 amount, uint256 shares);\\n\\n    /**\\n     * @dev Emitted when funds are withdrawn from the strategy\\n     * @param user The address that withdrew funds\\n     * @param amount The amount withdrawn\\n     * @param shares The number of shares burned\\n     */\\n    event Withdrawal(address indexed user, uint256 amount, uint256 shares);\\n\\n    /**\\n     * @dev Emitted when yield is harvested\\n     * @param yieldAmount The amount of yield harvested\\n     * @param newTotalAssets The new total assets under management\\n     */\\n    event YieldHarvested(uint256 yieldAmount, uint256 newTotalAssets);\\n\\n    /**\\n     * @dev Emitted when strategy parameters are updated\\n     * @param parameter The parameter that was updated\\n     * @param oldValue The old value\\n     * @param newValue The new value\\n     */\\n    event StrategyUpdated(string parameter, uint256 oldValue, uint256 newValue);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // STRUCTS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Strategy metadata and performance metrics\\n     */\\n    struct StrategyInfo {\\n        string name;                // Strategy name (e.g., \\\"T-Bill Strategy\\\")\\n        string description;         // Strategy description\\n        uint256 totalAssets;        // Total assets under management\\n        uint256 totalShares;        // Total shares outstanding\\n        uint256 currentAPY;         // Current APY in basis points (e.g., 400 = 4%)\\n        uint256 riskScore;          // Risk score from 1-10 (1 = lowest risk)\\n        uint256 lastHarvest;        // Timestamp of last yield harvest\\n        bool active;                // Whether strategy is active\\n    }\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // DEPOSIT & WITHDRAWAL FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Deposits assets into the yield strategy\\n     * @param amount The amount of assets to deposit\\n     * @return shares The number of shares minted to the depositor\\n     */\\n    function deposit(uint256 amount) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Withdraws assets from the yield strategy\\n     * @param shares The number of shares to burn\\n     * @return amount The amount of assets withdrawn\\n     */\\n    function withdraw(uint256 shares) external returns (uint256 amount);\\n\\n    /**\\n     * @dev Emergency withdrawal of all user funds (may incur penalties)\\n     * @param user The address to withdraw funds for\\n     * @return amount The amount of assets withdrawn\\n     */\\n    function emergencyWithdraw(address user) external returns (uint256 amount);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // YIELD CALCULATION FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Calculates the current APY of the strategy\\n     * @return apy The current APY in basis points\\n     */\\n    function getCurrentAPY() external view returns (uint256 apy);\\n\\n    /**\\n     * @dev Calculates yield generated for a specific user\\n     * @param user The user address\\n     * @return yieldAmount The amount of yield generated\\n     */\\n    function calculateUserYield(address user) external view returns (uint256 yieldAmount);\\n\\n    /**\\n     * @dev Calculates the total yield generated by the strategy\\n     * @return totalYield The total yield generated\\n     */\\n    function getTotalYieldGenerated() external view returns (uint256 totalYield);\\n\\n    /**\\n     * @dev Harvests yield from the underlying protocol\\n     * @return yieldHarvested The amount of yield harvested\\n     */\\n    function harvestYield() external returns (uint256 yieldHarvested);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // SHARE CALCULATION FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Converts assets to shares\\n     * @param assets The amount of assets\\n     * @return shares The equivalent number of shares\\n     */\\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Converts shares to assets\\n     * @param shares The number of shares\\n     * @return assets The equivalent amount of assets\\n     */\\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Gets the user's share balance\\n     * @param user The user address\\n     * @return balance The user's share balance\\n     */\\n    function balanceOf(address user) external view returns (uint256 balance);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // STRATEGY INFORMATION FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Gets comprehensive strategy information\\n     * @return info The strategy information struct\\n     */\\n    function getStrategyInfo() external view returns (StrategyInfo memory info);\\n\\n    /**\\n     * @dev Gets the underlying asset address\\n     * @return asset The address of the underlying asset (e.g., USDC)\\n     */\\n    function asset() external view returns (address asset);\\n\\n    /**\\n     * @dev Gets the total assets under management\\n     * @return totalManagedAssets The total assets managed by this strategy\\n     */\\n    function totalAssets() external view returns (uint256 totalManagedAssets);\\n\\n    /**\\n     * @dev Gets the strategy's risk score\\n     * @return risk The risk score from 1-10 (1 = lowest risk)\\n     */\\n    function getRiskScore() external view returns (uint256 risk);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // PERFORMANCE FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Gets historical performance data\\n     * @param period The time period to look back (in seconds)\\n     * @return performance The performance data for the specified period\\n     */\\n    function getPerformanceData(uint256 period) external view returns (uint256 performance);\\n\\n    /**\\n     * @dev Checks if the strategy is profitable\\n     * @return profitable Whether the strategy is currently profitable\\n     */\\n    function isProfitable() external view returns (bool profitable);\\n\\n    /**\\n     * @dev Gets the maximum capacity of the strategy\\n     * @return maxCapacity The maximum amount of assets the strategy can handle\\n     */\\n    function maxCapacity() external view returns (uint256 maxCapacity);\\n\\n    /**\\n     * @dev Gets the current utilization rate\\n     * @return utilization The utilization rate as a percentage (basis points)\\n     */\\n    function utilizationRate() external view returns (uint256 utilization);\\n}\",\"keccak256\":\"0x3dbcde8604a18aff443ee40442187a697d0c9772bfe40e650f9e3b4da40b38cb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"All yield strategies must implement this interface for compatibility","version":1}}},"src/mocks/MockYieldStrategy.sol":{"MockYieldStrategy":{"abi":[{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"parameter","type":"string"},{"indexed":false,"internalType":"uint256","name":"oldValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"StrategyUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"yieldAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotalAssets","type":"uint256"}],"name":"YieldHarvested","type":"event"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"calculateUserYield","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"principal","type":"uint256"},{"internalType":"uint256","name":"timeInSeconds","type":"uint256"}],"name":"calculateYield","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentAPY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"emergencyWithdraw","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentAPY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getPerformanceData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRiskScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getStrategyInfo","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"totalAssets","type":"uint256"},{"internalType":"uint256","name":"totalShares","type":"uint256"},{"internalType":"uint256","name":"currentAPY","type":"uint256"},{"internalType":"uint256","name":"riskScore","type":"uint256"},{"internalType":"uint256","name":"lastHarvest","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct IYieldStrategy.StrategyInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalYieldGenerated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvestYield","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isProfitable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"maxCapacity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"apy","type":"uint256"}],"name":"setCurrentAPY","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"strategyName","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"shouldFail","type":"bool"}],"name":"setShouldFail","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setUserYield","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"utilizationRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Mock yield strategy for testing purposes","events":{"Deposit(address,uint256,uint256)":{"details":"Emitted when funds are deposited into the strategy","params":{"amount":"The amount deposited","shares":"The number of shares minted","user":"The address that deposited funds"}},"StrategyUpdated(string,uint256,uint256)":{"details":"Emitted when strategy parameters are updated","params":{"newValue":"The new value","oldValue":"The old value","parameter":"The parameter that was updated"}},"Withdrawal(address,uint256,uint256)":{"details":"Emitted when funds are withdrawn from the strategy","params":{"amount":"The amount withdrawn","shares":"The number of shares burned","user":"The address that withdrew funds"}},"YieldHarvested(uint256,uint256)":{"details":"Emitted when yield is harvested","params":{"newTotalAssets":"The new total assets under management","yieldAmount":"The amount of yield harvested"}}},"kind":"dev","methods":{"balanceOf(address)":{"details":"Gets the user's share balance","params":{"user":"The user address"},"returns":{"_0":"The user's share balance"}},"calculateUserYield(address)":{"details":"Calculates yield generated for a specific user","params":{"user":"The user address"},"returns":{"_0":"The amount of yield generated"}},"convertToAssets(uint256)":{"details":"Converts shares to assets","params":{"shares":"The number of shares"},"returns":{"_0":"The equivalent amount of assets"}},"convertToShares(uint256)":{"details":"Converts assets to shares","params":{"assets":"The amount of assets"},"returns":{"_0":"The equivalent number of shares"}},"deposit(uint256)":{"details":"Deposits assets into the yield strategy","params":{"amount":"The amount of assets to deposit"},"returns":{"shares":"The number of shares minted to the depositor"}},"emergencyWithdraw(address)":{"details":"Emergency withdrawal of all user funds (may incur penalties)","params":{"user":"The address to withdraw funds for"},"returns":{"amount":"The amount of assets withdrawn"}},"getCurrentAPY()":{"details":"Calculates the current APY of the strategy","returns":{"_0":"The current APY in basis points"}},"getRiskScore()":{"details":"Gets the strategy's risk score","returns":{"_0":"The risk score from 1-10 (1 = lowest risk)"}},"getStrategyInfo()":{"details":"Gets comprehensive strategy information","returns":{"_0":"The strategy information struct"}},"getTotalYieldGenerated()":{"details":"Calculates the total yield generated by the strategy","returns":{"_0":"The total yield generated"}},"harvestYield()":{"details":"Harvests yield from the underlying protocol","returns":{"_0":"The amount of yield harvested"}},"isProfitable()":{"details":"Checks if the strategy is profitable","returns":{"_0":"Whether the strategy is currently profitable"}},"maxCapacity()":{"details":"Gets the maximum capacity of the strategy","returns":{"_0":"The maximum amount of assets the strategy can handle"}},"totalAssets()":{"details":"Gets the total assets under management","returns":{"_0":"The total assets managed by this strategy"}},"utilizationRate()":{"details":"Gets the current utilization rate","returns":{"_0":"The utilization rate as a percentage (basis points)"}},"withdraw(uint256)":{"details":"Withdraws assets from the yield strategy","params":{"shares":"The number of shares to burn"},"returns":{"amount":"The amount of assets withdrawn"}}},"stateVariables":{"asset":{"details":"Gets the underlying asset address","return":"The address of the underlying asset (e.g., USDC)","returns":{"_0":"The address of the underlying asset (e.g., USDC)"}}},"title":"MockYieldStrategy","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x11F JUMPI PUSH1 0x1F PUSH2 0x10D5 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x124 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11F JUMPI PUSH2 0x190 PUSH1 0x4 SSTORE PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND PUSH1 0x5 SSTORE PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x115 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x101 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0xD8 JUMPI JUMPDEST PUSH32 0x4D6F636B2053747261746567790000000000000000000000000000000000001A DUP4 SSTORE PUSH1 0x40 MLOAD PUSH2 0xF9A SWAP1 DUP2 PUSH2 0x13B DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x3E0 ADD MSTORE DUP2 DUP2 PUSH2 0x853 ADD MSTORE DUP2 DUP2 PUSH2 0x90C ADD MSTORE PUSH2 0xEFA ADD MSTORE RETURN JUMPDEST DUP3 DUP1 MSTORE PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xF7 JUMPI POP PUSH2 0x88 JUMP JUMPDEST DUP4 DUP2 SSTORE DUP3 ADD PUSH2 0xEA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x76 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1E1D114 EQ PUSH2 0xAEA JUMPI DUP4 PUSH4 0x43CBE5B EQ PUSH2 0xAAC JUMPI DUP4 PUSH4 0x6FDDE03 EQ PUSH2 0x9C6 JUMPI DUP4 PUSH4 0x7A2D13A EQ PUSH2 0x9A7 JUMPI DUP4 PUSH4 0x2B35F739 EQ PUSH2 0x882 JUMPI DUP4 PUSH4 0x2E1A7D4D EQ PUSH2 0x89D JUMPI DUP4 PUSH4 0x3612DDDA EQ PUSH2 0x882 JUMPI DUP4 PUSH4 0x38D52E0F EQ PUSH2 0x83F JUMPI DUP4 PUSH4 0x39A24333 EQ PUSH2 0x825 JUMPI DUP4 PUSH4 0x39C1A8E8 EQ PUSH2 0x807 JUMPI DUP4 PUSH4 0x3FD18893 EQ PUSH2 0x7EA JUMPI DUP4 PUSH4 0x59B6A0C9 EQ PUSH2 0x7CE JUMPI DUP4 PUSH4 0x6C321C8A EQ PUSH2 0x70C JUMPI DUP4 PUSH4 0x6F7C99D2 EQ PUSH2 0x697 JUMPI DUP4 PUSH4 0x6FF1C9BC EQ PUSH2 0x668 JUMPI DUP4 PUSH4 0x70A08231 EQ PUSH2 0x630 JUMPI DUP4 PUSH4 0x8B66268C EQ PUSH2 0x616 JUMPI DUP4 PUSH4 0x9613092D EQ PUSH2 0x4C7 JUMPI DUP4 PUSH4 0x962CA496 EQ PUSH2 0x4C2 JUMPI DUP4 PUSH4 0x9A79D32B EQ PUSH2 0x4C2 JUMPI DUP4 PUSH4 0xA5AA5C12 EQ PUSH2 0x493 JUMPI DUP4 PUSH4 0xB6B55F25 EQ PUSH2 0x383 JUMPI DUP4 PUSH4 0xC47F0027 EQ PUSH2 0x1C2 JUMPI DUP4 PUSH4 0xC6E6F592 EQ PUSH2 0x199 JUMPI POP DUP3 PUSH4 0xE8D991D1 EQ PUSH2 0x148 JUMPI POP POP PUSH4 0xFF50ABDC EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAEA JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 PUSH32 0x3FB12FB590BB295327F3BFC48158ADA0B1147F8F823E0C7A09B98B301D186774 DUP2 PUSH1 0x1 SLOAD DUP2 MLOAD SWAP1 DUP6 DUP3 MSTORE DUP7 DUP3 ADD MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI POP PUSH2 0x1B8 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0xF29 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP3 SWAP1 CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP1 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x37B JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x37B JUMPI DUP1 DUP3 ADD CALLDATALOAD SWAP1 PUSH2 0x20E PUSH2 0x205 DUP4 PUSH2 0xBDC JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH2 0xBBA JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x377 JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 DUP7 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0x364 JUMPI POP PUSH2 0x241 DUP4 SLOAD PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x303 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x284 JUMPI POP DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0x279 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x262 JUMP JUMPDEST DUP4 DUP1 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 DUP6 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x2EB JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x2D2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x2C7 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2B3 JUMP JUMPDEST DUP4 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x35A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x34F JUMPI POP PUSH2 0x24A JUMP JUMPDEST DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x342 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP3 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI DUP3 CALLDATALOAD DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP2 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x480 JUMPI DUP4 MSTORE PUSH1 0x20 SWAP5 POP PUSH2 0x40D SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC88 JUMP JUMPDEST DUP2 PUSH2 0x417 DUP3 PUSH2 0xF29 JUMP JUMPDEST SWAP4 CALLER DUP2 MSTORE PUSH1 0x6 DUP7 MSTORE KECCAK256 PUSH2 0x42B DUP5 DUP3 SLOAD PUSH2 0xC7B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x439 DUP4 PUSH1 0x2 SLOAD PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x448 DUP2 PUSH1 0x1 SLOAD PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE DUP3 DUP5 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP3 CALLER SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x195 JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0x5 SLOAD AND SWAP2 AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xB4D JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x37F JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI DUP1 MLOAD PUSH2 0x5D9 SWAP4 PUSH2 0x4E7 DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x60 DUP3 MSTORE PUSH1 0xE0 PUSH1 0x20 SWAP3 PUSH1 0x60 DUP5 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 SLOAD SWAP2 PUSH1 0x2 SLOAD SWAP4 SLOAD DUP2 MLOAD SWAP5 PUSH2 0x52A DUP7 PUSH2 0xB6B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x535 DUP2 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x4D6F636B205374726174656779 PUSH1 0x98 SHL DUP6 DUP3 ADD MSTORE DUP7 MSTORE DUP3 MLOAD SWAP2 PUSH2 0x55C DUP4 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x1F DUP4 MSTORE PUSH32 0x4D6F636B207969656C6420737472617465677920666F722074657374696E6700 DUP6 DUP5 ADD MSTORE DUP5 DUP8 ADD SWAP3 DUP4 MSTORE DUP4 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH2 0x5EC PUSH1 0xC0 DUP10 ADD SWAP5 TIMESTAMP DUP7 MSTORE PUSH1 0xE0 DUP11 ADD SWAP7 PUSH1 0x1 DUP9 MSTORE DUP1 MLOAD SWAP12 DUP13 SWAP12 DUP11 DUP14 MSTORE MLOAD DUP13 PUSH2 0x100 SWAP12 DUP13 SWAP2 ADD MSTORE PUSH2 0x120 DUP14 ADD SWAP1 PUSH2 0xB0D JUMP JUMPDEST SWAP2 MLOAD SWAP1 PUSH1 0x1F NOT DUP13 DUP5 SUB ADD SWAP1 DUP13 ADD MSTORE PUSH2 0xB0D JUMP JUMPDEST SWAP7 MLOAD PUSH1 0x60 DUP10 ADD MSTORE MLOAD PUSH1 0x80 DUP9 ADD MSTORE MLOAD PUSH1 0xA0 DUP8 ADD MSTORE MLOAD PUSH1 0xC0 DUP7 ADD MSTORE MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI CALLDATALOAD PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x37F JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1BF JUMPI POP PUSH2 0x1B8 PUSH1 0x20 SWAP3 PUSH2 0xE9B JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1BF JUMPI POP PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0x6D2 JUMPI PUSH1 0x20 DUP3 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F636B207374726174656779206661696C757265 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x1 SLOAD SWAP3 DUP4 ISZERO DUP1 PUSH2 0x7C2 JUMPI PUSH2 0x2710 DUP1 DUP7 MUL SWAP6 DUP7 DIV EQ OR ISZERO PUSH2 0x7AF JUMPI PUSH1 0x20 DUP4 MLOAD DUP1 SWAP3 PUSH4 0x59B6A0C9 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 ADDRESS GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x7A4 JUMPI DUP1 SWAP3 PUSH2 0x76E JUMPI JUMPDEST POP POP PUSH2 0x1B8 SWAP1 PUSH1 0x20 SWAP4 PUSH2 0xC5B JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x79C JUMPI JUMPDEST DUP2 PUSH2 0x789 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBBA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BF JUMPI POP MLOAD DUP3 PUSH2 0x1B8 PUSH2 0x75A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x77C JUMP JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 SWAP3 POP SWAP1 PUSH2 0x768 JUMP JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI MLOAD PUSH1 0x0 NOT DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI DUP1 CALLDATALOAD SWAP1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP3 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI DUP1 CALLDATALOAD SWAP1 CALLER DUP5 MSTORE PUSH1 0x6 DUP6 MSTORE DUP2 DUP4 DUP6 KECCAK256 SLOAD LT PUSH2 0x96E JUMPI POP DUP2 PUSH2 0x8D1 DUP3 PUSH2 0xF4B JUMP JUMPDEST SWAP4 CALLER DUP2 MSTORE PUSH1 0x6 DUP7 MSTORE KECCAK256 PUSH2 0x8E5 DUP3 DUP3 SLOAD PUSH2 0xE3C JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x8F3 DUP2 PUSH1 0x2 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x902 DUP4 PUSH1 0x1 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x939 DUP4 CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE49 JUMP JUMPDEST DUP2 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP5 DUP3 ADD MSTORE PUSH32 0xDF273CB619D95419A9CD0EC88123A0538C85064229BAA6363788F743FFF90DEB DUP3 CALLER SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI POP PUSH2 0x1B8 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0xF4B JUMP JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP1 SLOAD PUSH2 0x9E6 DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0xA84 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA28 JUMPI JUMPDEST POP POP POP PUSH2 0xA12 DUP3 PUSH2 0xA24 SWAP5 SUB DUP4 PUSH2 0xBBA JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xB0D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 DUP1 SWAP7 POP MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP7 LT PUSH2 0xA6C JUMPI POP POP POP PUSH2 0xA12 DUP3 PUSH1 0x20 PUSH2 0xA24 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0xA00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0xA4F JUMP JUMPDEST PUSH2 0xA24 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0xA12 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xA00 JUMP JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI POP PUSH4 0x1E13380 PUSH2 0xAE2 PUSH1 0x20 SWAP4 PUSH2 0x2710 PUSH2 0xADC PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 SLOAD SWAP1 CALLDATALOAD PUSH2 0xC32 JUMP JUMPDEST DIV PUSH2 0xC32 JUMP JUMPDEST DIV SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB08 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB08 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB39 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB18 JUMP JUMPDEST CALLVALUE PUSH2 0xB08 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB08 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB88 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB88 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB88 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB88 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xC28 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xC12 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC07 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xC45 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xC65 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xC45 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xD05 PUSH1 0x40 MLOAD PUSH2 0xCA0 DUP2 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xD9B JUMPI RETURNDATASIZE SWAP2 PUSH2 0xCEA DUP4 PUSH2 0xBDC JUMP JUMPDEST SWAP3 PUSH2 0xCF8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xBBA JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE DUP7 DUP9 DUP6 ADD RETURNDATACOPY PUSH2 0xD9F JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0xD77 JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0xD20 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x195 JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1BF JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xE01 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xDB3 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0xDBC JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE14 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE38 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xB0D JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC45 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0xB88 JUMPI PUSH2 0xE99 SWAP3 PUSH1 0x40 MSTORE PUSH2 0xC88 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 SWAP3 DUP4 ISZERO PUSH2 0xF22 JUMPI PUSH2 0xEE6 DUP5 PUSH2 0xECF PUSH2 0xF1F SWAP7 PUSH2 0xF4B JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0xEF5 DUP4 PUSH1 0x1 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH32 0x0 AND PUSH2 0xE49 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF42 PUSH2 0xF1F SWAP3 PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF42 PUSH2 0xF1F SWAP3 PUSH1 0x1 SLOAD SWAP1 PUSH2 0xC32 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xEA 0xD6 0xAA PUSH2 0xA8B3 RETURNDATACOPY 0xD7 0x5E DUP7 0xF9 CALLER INVALID 0xD8 0xC5 CREATE2 0xA9 0x23 SWAP15 0xB7 EXTCODEHASH SWAP14 SELFBALANCE PUSH18 0xD96E9E11F9D5464736F6C63430008140033 ","sourceMap":"310:5108:5:-:0;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;-1:-1:-1;;;;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;310:5108:5;;;;;;595:3;;310:5108;;;645:5;310:5108;;645:5;310:5108;747:14;;-1:-1:-1;310:5108:5;;;;;;;;;;;;;;-1:-1:-1;310:5108:5;;;;;;;;;;;-1:-1:-1;310:5108:5;;;;;;;;;;;747:14;310:5108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:5;310:5108;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;310:5108:5;;;595:3;310:5108;;;;;;;;;;;;-1:-1:-1;310:5108:5;;;;;;-1:-1:-1;310:5108:5;;;;;-1:-1:-1;310:5108:5"},"deployedBytecode":{"functionDebugData":{"abi_encode_string":{"entryPoint":2829,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3036,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":3195,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":3163,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":3122,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3644,"id":null,"parameterSlots":2,"returnSlots":1},"external_fun_getCurrentAPY":{"entryPoint":2893,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalAssets":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3064,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3002,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_11645":{"entryPoint":2974,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_9574":{"entryPoint":2923,"id":null,"parameterSlots":1,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":3208,"id":440,"parameterSlots":2,"returnSlots":0},"fun_convertToAssets":{"entryPoint":3915,"id":1402,"parameterSlots":1,"returnSlots":1},"fun_convertToShares":{"entryPoint":3881,"id":1380,"parameterSlots":1,"returnSlots":1},"fun_emergencyWithdraw":{"entryPoint":3739,"id":1308,"parameterSlots":1,"returnSlots":1},"fun_safeTransfer":{"entryPoint":3657,"id":146,"parameterSlots":3,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":3487,"id":774,"parameterSlots":4,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"1015":[{"length":32,"start":992},{"length":32,"start":2131},{"length":32,"start":2316},{"length":32,"start":3834}]},"linkReferences":{},"object":"6040608081526004908136101561001557600080fd5b600090813560e01c92836301e1d11414610aea578363043cbe5b14610aac57836306fdde03146109c657836307a2d13a146109a75783632b35f739146108825783632e1a7d4d1461089d5783633612ddda1461088257836338d52e0f1461083f57836339a243331461082557836339c1a8e8146108075783633fd18893146107ea57836359b6a0c9146107ce5783636c321c8a1461070c5783636f7c99d2146106975783636ff1c9bc1461066857836370a08231146106305783638b66268c146106165783639613092d146104c7578363962ca496146104c25783639a79d32b146104c2578363a5aa5c1214610493578363b6b55f2514610383578363c47f0027146101c2578363c6e6f5921461019957508263e8d991d11461014857505063ff50abdc1461014357600080fd5b610aea565b34610195578160031936011261019557602090600354907f3fb12fb590bb295327f3bfc48158ada0b1147f8f823e0c7a09b98b301d1867748160015481519085825286820152a151908152f35b5080fd5b91346101bf5760203660031901126101bf57506101b860209235610f29565b9051908152f35b80fd5b8290346101955760208060031936011261037f5767ffffffffffffffff91803583811161037b573660238201121561037b57808201359061020e61020583610bdc565b97519788610bba565b8187523660248383010111610377578186926024869301838a013787010152845192831161036457506102418354610bf8565b601f8111610303575b5080601f831160011461028457508293829392610279575b50508160011b916000199060031b1c191617815580f35b015190508380610262565b838052601f198316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b8782106102eb5750508360019596106102d2575b505050811b01815580f35b015160001960f88460031b161c191690558380806102c7565b806001859682949686015181550195019301906102b3565b8380527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f840160051c81019183851061035a575b601f0160051c01905b81811061034f575061024a565b848155600101610342565b9091508190610339565b634e487b7160e01b845260419052602483fd5b8580fd5b8480fd5b8280fd5b92503461019557602036600319011261019557823581516323b872dd60e01b60208201523360248201523060448201528160648201526064815260a0810181811067ffffffffffffffff8211176104805783526020945061040d907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c88565b8161041782610f29565b93338152600686522061042b848254610c7b565b905561043983600254610c7b565b60025561044881600154610c7b565b600155815190815282848201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15823392a251908152f35b634e487b7160e01b855260418652602485fd5b90503461019557602036600319011261019557358015158091036101955760ff80196005541691161760055580f35b610b4d565b903461037f578260031936011261037f5780516105d9936104e782610b6b565b6060825260e060209260608482015282858201528260608201528260808201528260a08201528260c0820152015260015491600254935481519461052a86610b6b565b825161053581610b9e565b600d81526c4d6f636b20537472617465677960981b85820152865282519161055c83610b9e565b601f83527f4d6f636b207969656c6420737472617465677920666f722074657374696e670085840152848701928352838701958652606087019182526080870190815260a0870191600183526105ec60c089019442865260e08a01966001885280519b8c9b8a8d52518c6101009b8c9101526101208d0190610b0d565b915190601f198c840301908c0152610b0d565b965160608901525160808801525160a08701525160c08601525160e0850152511515908301520390f35b905034610195576020366003190112610195573560035580f35b3461037f57602036600319011261037f57356001600160a01b0381169081900361037f57828291602094526006845220549051908152f35b3461037f57602036600319011261037f5735916001600160a01b03831683036101bf57506101b8602092610e9b565b82346101bf5760203660031901126101bf5781356001600160a01b038116036101bf575060ff600554166106d2576020826003549051908152f35b6020606492519162461bcd60e51b835282015260156024820152744d6f636b207374726174656779206661696c75726560581b6044820152fd5b91346101bf57806003193601126101bf57600154928315806107c2576127108086029586041417156107af576020835180926359b6a0c960e01b825281305afa9182156107a457809261076e575b50506101b890602093610c5b565b51908152f35b9091506020823d821161079c575b8161078960209383610bba565b810103126101bf575051826101b861075a565b3d915061077c565b8351903d90823e3d90fd5b634e487b7160e01b825260119052602490fd5b50506020925090610768565b5034610195578160031936011261019557516000198152602090f35b3461037f57602036600319011261037f5760209250549051908152f35b50346101955781600319360112610195576020906003549051908152f35b905034610195576020366003190112610195578035905580f35b5034610195578160031936011261019557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101955781600319360112610195576020905160018152f35b925034610195576020928360031936011261037f578035903384526006855281838520541061096e5750816108d182610f4b565b9333815260068652206108e5828254610e3c565b90556108f381600254610e3c565b60025561090283600154610e3c565b60015561093983337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e49565b815190838252848201527fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb823392a251908152f35b825162461bcd60e51b81529081018590526013602482015272496e73756666696369656e742073686172657360681b6044820152606490fd5b91346101bf5760203660031901126101bf57506101b860209235610f4b565b50346101955781600319360112610195578051908280546109e681610bf8565b80855291600191808316908115610a845750600114610a28575b505050610a1282610a24940383610bba565b51918291602083526020830190610b0d565b0390f35b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610a6c57505050610a12826020610a249582010194610a00565b80546020878701810191909152909501948101610a4f565b610a24975086935060209250610a1294915060ff191682840152151560051b82010194610a00565b91346101bf57816003193601126101bf57506301e13380610ae2602093612710610adc6024359280549035610c32565b04610c32565b049051908152f35b34610b08576000366003190112610b08576020600154604051908152f35b600080fd5b919082519283825260005b848110610b39575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b18565b34610b08576000366003190112610b08576020600454604051908152f35b610100810190811067ffffffffffffffff821117610b8857604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610b8857604052565b90601f8019910116810190811067ffffffffffffffff821117610b8857604052565b67ffffffffffffffff8111610b8857601f01601f191660200190565b90600182811c92168015610c28575b6020831014610c1257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c07565b81810292918115918404141715610c4557565b634e487b7160e01b600052601160045260246000fd5b8115610c65570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610c4557565b60018060a01b031690610d05604051610ca081610b9e565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d15610d9b573d91610cea83610bdc565b92610cf86040519485610bba565b83523d868885013e610d9f565b805191821591848315610d77575b505050905015610d205750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b919381809450010312610195578201519081151582036101bf575080388084610d13565b6060915b91929015610e015750815115610db3575090565b3b15610dbc5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610e145750805190602001fd5b60405162461bcd60e51b815260206004820152908190610e38906024830190610b0d565b0390fd5b91908203918211610c4557565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff831182841017610b8857610e9992604052610c88565b565b6001600160a01b03818116600081815260066020526040812054909390928315610f2257610ee684610ecf610f1f96610f4b565b968795815260066020526040812055600254610e3c565b600255610ef583600154610e3c565b6001557f000000000000000000000000000000000000000000000000000000000000000016610e49565b90565b5050505090565b6001548015610f4757610f42610f1f9260025490610c32565b610c5b565b5090565b6002548015610f4757610f42610f1f9260015490610c3256fea26469706673582212205aead6aa61a8b33ed75e86f933fed8c5f5a9239eb73f9d47710d96e9e11f9d5464736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1E1D114 EQ PUSH2 0xAEA JUMPI DUP4 PUSH4 0x43CBE5B EQ PUSH2 0xAAC JUMPI DUP4 PUSH4 0x6FDDE03 EQ PUSH2 0x9C6 JUMPI DUP4 PUSH4 0x7A2D13A EQ PUSH2 0x9A7 JUMPI DUP4 PUSH4 0x2B35F739 EQ PUSH2 0x882 JUMPI DUP4 PUSH4 0x2E1A7D4D EQ PUSH2 0x89D JUMPI DUP4 PUSH4 0x3612DDDA EQ PUSH2 0x882 JUMPI DUP4 PUSH4 0x38D52E0F EQ PUSH2 0x83F JUMPI DUP4 PUSH4 0x39A24333 EQ PUSH2 0x825 JUMPI DUP4 PUSH4 0x39C1A8E8 EQ PUSH2 0x807 JUMPI DUP4 PUSH4 0x3FD18893 EQ PUSH2 0x7EA JUMPI DUP4 PUSH4 0x59B6A0C9 EQ PUSH2 0x7CE JUMPI DUP4 PUSH4 0x6C321C8A EQ PUSH2 0x70C JUMPI DUP4 PUSH4 0x6F7C99D2 EQ PUSH2 0x697 JUMPI DUP4 PUSH4 0x6FF1C9BC EQ PUSH2 0x668 JUMPI DUP4 PUSH4 0x70A08231 EQ PUSH2 0x630 JUMPI DUP4 PUSH4 0x8B66268C EQ PUSH2 0x616 JUMPI DUP4 PUSH4 0x9613092D EQ PUSH2 0x4C7 JUMPI DUP4 PUSH4 0x962CA496 EQ PUSH2 0x4C2 JUMPI DUP4 PUSH4 0x9A79D32B EQ PUSH2 0x4C2 JUMPI DUP4 PUSH4 0xA5AA5C12 EQ PUSH2 0x493 JUMPI DUP4 PUSH4 0xB6B55F25 EQ PUSH2 0x383 JUMPI DUP4 PUSH4 0xC47F0027 EQ PUSH2 0x1C2 JUMPI DUP4 PUSH4 0xC6E6F592 EQ PUSH2 0x199 JUMPI POP DUP3 PUSH4 0xE8D991D1 EQ PUSH2 0x148 JUMPI POP POP PUSH4 0xFF50ABDC EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAEA JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 PUSH32 0x3FB12FB590BB295327F3BFC48158ADA0B1147F8F823E0C7A09B98B301D186774 DUP2 PUSH1 0x1 SLOAD DUP2 MLOAD SWAP1 DUP6 DUP3 MSTORE DUP7 DUP3 ADD MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI POP PUSH2 0x1B8 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0xF29 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP3 SWAP1 CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP1 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x37B JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x37B JUMPI DUP1 DUP3 ADD CALLDATALOAD SWAP1 PUSH2 0x20E PUSH2 0x205 DUP4 PUSH2 0xBDC JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH2 0xBBA JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x377 JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 DUP7 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0x364 JUMPI POP PUSH2 0x241 DUP4 SLOAD PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x303 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x284 JUMPI POP DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0x279 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x262 JUMP JUMPDEST DUP4 DUP1 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 DUP6 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x2EB JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x2D2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x2C7 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2B3 JUMP JUMPDEST DUP4 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x35A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x34F JUMPI POP PUSH2 0x24A JUMP JUMPDEST DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x342 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP3 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI DUP3 CALLDATALOAD DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP2 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x480 JUMPI DUP4 MSTORE PUSH1 0x20 SWAP5 POP PUSH2 0x40D SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC88 JUMP JUMPDEST DUP2 PUSH2 0x417 DUP3 PUSH2 0xF29 JUMP JUMPDEST SWAP4 CALLER DUP2 MSTORE PUSH1 0x6 DUP7 MSTORE KECCAK256 PUSH2 0x42B DUP5 DUP3 SLOAD PUSH2 0xC7B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x439 DUP4 PUSH1 0x2 SLOAD PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x448 DUP2 PUSH1 0x1 SLOAD PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE DUP3 DUP5 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP3 CALLER SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x195 JUMPI PUSH1 0xFF DUP1 NOT PUSH1 0x5 SLOAD AND SWAP2 AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xB4D JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x37F JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI DUP1 MLOAD PUSH2 0x5D9 SWAP4 PUSH2 0x4E7 DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x60 DUP3 MSTORE PUSH1 0xE0 PUSH1 0x20 SWAP3 PUSH1 0x60 DUP5 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 SLOAD SWAP2 PUSH1 0x2 SLOAD SWAP4 SLOAD DUP2 MLOAD SWAP5 PUSH2 0x52A DUP7 PUSH2 0xB6B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x535 DUP2 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x4D6F636B205374726174656779 PUSH1 0x98 SHL DUP6 DUP3 ADD MSTORE DUP7 MSTORE DUP3 MLOAD SWAP2 PUSH2 0x55C DUP4 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x1F DUP4 MSTORE PUSH32 0x4D6F636B207969656C6420737472617465677920666F722074657374696E6700 DUP6 DUP5 ADD MSTORE DUP5 DUP8 ADD SWAP3 DUP4 MSTORE DUP4 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH2 0x5EC PUSH1 0xC0 DUP10 ADD SWAP5 TIMESTAMP DUP7 MSTORE PUSH1 0xE0 DUP11 ADD SWAP7 PUSH1 0x1 DUP9 MSTORE DUP1 MLOAD SWAP12 DUP13 SWAP12 DUP11 DUP14 MSTORE MLOAD DUP13 PUSH2 0x100 SWAP12 DUP13 SWAP2 ADD MSTORE PUSH2 0x120 DUP14 ADD SWAP1 PUSH2 0xB0D JUMP JUMPDEST SWAP2 MLOAD SWAP1 PUSH1 0x1F NOT DUP13 DUP5 SUB ADD SWAP1 DUP13 ADD MSTORE PUSH2 0xB0D JUMP JUMPDEST SWAP7 MLOAD PUSH1 0x60 DUP10 ADD MSTORE MLOAD PUSH1 0x80 DUP9 ADD MSTORE MLOAD PUSH1 0xA0 DUP8 ADD MSTORE MLOAD PUSH1 0xC0 DUP7 ADD MSTORE MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI CALLDATALOAD PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x37F JUMPI DUP3 DUP3 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1BF JUMPI POP PUSH2 0x1B8 PUSH1 0x20 SWAP3 PUSH2 0xE9B JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1BF JUMPI POP PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0x6D2 JUMPI PUSH1 0x20 DUP3 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F636B207374726174656779206661696C757265 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x1 SLOAD SWAP3 DUP4 ISZERO DUP1 PUSH2 0x7C2 JUMPI PUSH2 0x2710 DUP1 DUP7 MUL SWAP6 DUP7 DIV EQ OR ISZERO PUSH2 0x7AF JUMPI PUSH1 0x20 DUP4 MLOAD DUP1 SWAP3 PUSH4 0x59B6A0C9 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 ADDRESS GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x7A4 JUMPI DUP1 SWAP3 PUSH2 0x76E JUMPI JUMPDEST POP POP PUSH2 0x1B8 SWAP1 PUSH1 0x20 SWAP4 PUSH2 0xC5B JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x79C JUMPI JUMPDEST DUP2 PUSH2 0x789 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBBA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BF JUMPI POP MLOAD DUP3 PUSH2 0x1B8 PUSH2 0x75A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x77C JUMP JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 SWAP3 POP SWAP1 PUSH2 0x768 JUMP JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI MLOAD PUSH1 0x0 NOT DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x37F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37F JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI DUP1 CALLDATALOAD SWAP1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP3 POP CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37F JUMPI DUP1 CALLDATALOAD SWAP1 CALLER DUP5 MSTORE PUSH1 0x6 DUP6 MSTORE DUP2 DUP4 DUP6 KECCAK256 SLOAD LT PUSH2 0x96E JUMPI POP DUP2 PUSH2 0x8D1 DUP3 PUSH2 0xF4B JUMP JUMPDEST SWAP4 CALLER DUP2 MSTORE PUSH1 0x6 DUP7 MSTORE KECCAK256 PUSH2 0x8E5 DUP3 DUP3 SLOAD PUSH2 0xE3C JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x8F3 DUP2 PUSH1 0x2 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x902 DUP4 PUSH1 0x1 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x939 DUP4 CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE49 JUMP JUMPDEST DUP2 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP5 DUP3 ADD MSTORE PUSH32 0xDF273CB619D95419A9CD0EC88123A0538C85064229BAA6363788F743FFF90DEB DUP3 CALLER SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI POP PUSH2 0x1B8 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0xF4B JUMP JUMPDEST POP CALLVALUE PUSH2 0x195 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x195 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP1 SLOAD PUSH2 0x9E6 DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0xA84 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA28 JUMPI JUMPDEST POP POP POP PUSH2 0xA12 DUP3 PUSH2 0xA24 SWAP5 SUB DUP4 PUSH2 0xBBA JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xB0D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 DUP1 SWAP7 POP MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP7 LT PUSH2 0xA6C JUMPI POP POP POP PUSH2 0xA12 DUP3 PUSH1 0x20 PUSH2 0xA24 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0xA00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0xA4F JUMP JUMPDEST PUSH2 0xA24 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0xA12 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xA00 JUMP JUMPDEST SWAP2 CALLVALUE PUSH2 0x1BF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI POP PUSH4 0x1E13380 PUSH2 0xAE2 PUSH1 0x20 SWAP4 PUSH2 0x2710 PUSH2 0xADC PUSH1 0x24 CALLDATALOAD SWAP3 DUP1 SLOAD SWAP1 CALLDATALOAD PUSH2 0xC32 JUMP JUMPDEST DIV PUSH2 0xC32 JUMP JUMPDEST DIV SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB08 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB08 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB39 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB18 JUMP JUMPDEST CALLVALUE PUSH2 0xB08 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB08 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB88 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB88 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB88 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB88 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xC28 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xC12 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC07 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xC45 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xC65 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xC45 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xD05 PUSH1 0x40 MLOAD PUSH2 0xCA0 DUP2 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xD9B JUMPI RETURNDATASIZE SWAP2 PUSH2 0xCEA DUP4 PUSH2 0xBDC JUMP JUMPDEST SWAP3 PUSH2 0xCF8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xBBA JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE DUP7 DUP9 DUP6 ADD RETURNDATACOPY PUSH2 0xD9F JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0xD77 JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0xD20 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x195 JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1BF JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xE01 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xDB3 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0xDBC JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE14 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE38 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xB0D JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC45 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0xB88 JUMPI PUSH2 0xE99 SWAP3 PUSH1 0x40 MSTORE PUSH2 0xC88 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 SWAP3 DUP4 ISZERO PUSH2 0xF22 JUMPI PUSH2 0xEE6 DUP5 PUSH2 0xECF PUSH2 0xF1F SWAP7 PUSH2 0xF4B JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0xEF5 DUP4 PUSH1 0x1 SLOAD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH32 0x0 AND PUSH2 0xE49 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF42 PUSH2 0xF1F SWAP3 PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF42 PUSH2 0xF1F SWAP3 PUSH1 0x1 SLOAD SWAP1 PUSH2 0xC32 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xEA 0xD6 0xAA PUSH2 0xA8B3 RETURNDATACOPY 0xD7 0x5E DUP7 0xF9 CALLER INVALID 0xD8 0xC5 CREATE2 0xA9 0x23 SWAP15 0xB7 EXTCODEHASH SWAP14 SELFBALANCE PUSH18 0xD96E9E11F9D5464736F6C63430008140033 ","sourceMap":"310:5108:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3705:40;310:5108;3732:12;310:5108;;;;;;;;;;;3705:40;310:5108;;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5228:17;;;310:5108;;;;;;;;;;;;;;;-1:-1:-1;310:5108:5;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5228:17;;310:5108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;310:5108:5;;;;;-1:-1:-1;;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;1482:68:2;;;2073:10:5;1482:68:2;;;310:5108:5;2093:4;310:5108;;;;;;;;;;1482:68:2;;310:5108:5;;;;;;;;;;;;;;;;-1:-1:-1;1482:68:2;;2049:5:5;-1:-1:-1;;;;;310:5108:5;1482:68:2;:::i;:::-;2135:23:5;;;;:::i;:::-;2073:10;;310:5108;;2168:9;310:5108;;;2168:31;310:5108;;;2168:31;:::i;:::-;310:5108;;2209:22;310:5108;2209:22;310:5108;2209:22;:::i;:::-;;310:5108;2241:22;310:5108;;;2241:22;:::i;:::-;310:5108;;;;;;;;;;;;2279:35;2073:10;;2279:35;;310:5108;;;;;;-1:-1:-1;;;310:5108:5;;;;;1482:68:2;310:5108:5;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;;;;;984:24;310:5108;;;;;984:24;310:5108;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4524:12;310:5108;;4563:12;310:5108;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;310:5108:5;;;;;;;;;;;;:::i;:::-;;;;;;;;;4389:328;;;310:5108;;;4389:328;;;310:5108;;;;4389:328;;310:5108;;;;4389:328;;310:5108;;;;4389:328;;310:5108;4524:12;310:5108;;;;4389:328;;4665:15;;310:5108;;;4389:328;;310:5108;4524:12;310:5108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;-1:-1:-1;;;;;310:5108:5;;;;;;;;;;;;;;4264:9;310:5108;;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;-1:-1:-1;;;;;310:5108:5;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;310:5108:5;;;;;;-1:-1:-1;;;;;310:5108:5;;;;;;;3407:11;310:5108;;3403:73;;310:5108;;;;;;;;;;3403:73;310:5108;;;;;;;;3434:31;;;;310:5108;;;;;;-1:-1:-1;;;310:5108:5;;;;3434:31;310:5108;;;;;;;;;;;;;5343:12;310:5108;;5343:16;;;;;5378:5;310:5108;;;;;;;;;;;5387:18;310:5108;;;;;;;5387:18;;:4;;:18;;;;;;;;;;;5343:66;5362:43;;;;310:5108;5362:43;;:::i;5343:66::-;310:5108;;;;;5387:18;;;;;;;;;;;;;;;;;;:::i;:::-;;;310:5108;;;;-1:-1:-1;310:5108:5;;5362:43;5387:18;;;;;-1:-1:-1;5387:18:5;;;310:5108;;;;;;;;;;;-1:-1:-1;;;310:5108:5;;;;;;;;5343:66;;;310:5108;5343:66;;;;;310:5108;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;;;394:39;-1:-1:-1;;;;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;5130:4;310:5108;;;;;;;;;;;;;;;;;;;;;2455:10;;310:5108;;2445:9;310:5108;;;;;;;2445:31;310:5108;;2528:23;;;;;:::i;:::-;2455:10;;310:5108;;2445:9;310:5108;;;2561:31;310:5108;;;2561:31;:::i;:::-;310:5108;;2602:22;310:5108;2602:22;310:5108;2602:22;:::i;:::-;;310:5108;2634:22;310:5108;;;2634:22;:::i;:::-;310:5108;;2706:6;2455:10;;2674:5;-1:-1:-1;;;;;310:5108:5;2706:6;:::i;:::-;310:5108;;;;;;;;;;2729:38;2455:10;;2729:38;;310:5108;;;;;;;;-1:-1:-1;;;310:5108:5;;;;;;;;;;;;;-1:-1:-1;;;310:5108:5;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:18;1862:27;310:5108;;1787:5;1760:23;310:5108;;;;;;;1760:23;:::i;:::-;310:5108;1862:27;:::i;:::-;310:5108;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;1514:12;310:5108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;310:5108:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;310:5108:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;5196:642:2:-;310:5108:5;;;;;;;5535:69:3;310:5108:5;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;5487:31:3;;;;;;;;;;;;310:5108:5;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;5535:69:3;:::i;:::-;310:5108:5;;5728:22:2;;;:56;;;;;;310:5108:5;;;;;;;;;5196:642:2;:::o;310:5108:5:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;310:5108:5;;;;;5728:56:2;5754:30;;;;;;;310:5108:5;;;;5754:30:2;;310:5108:5;;;;;;;;;5728:56:2;;;;;;;310:5108:5;;;7671:628:3;;;;7875:418;;;310:5108:5;;;7906:22:3;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;310:5108:5;;8201:17:3;:::o;310:5108:5:-;;;-1:-1:-1;;;310:5108:5;;;;;;;;;;;;;;;;;;;;7875:418:3;310:5108:5;;;;-1:-1:-1;8980:21:3;:17;;9152:142;;;;;;;8976:379;310:5108:5;;-1:-1:-1;;;9324:20:3;;310:5108:5;9324:20:3;;;310:5108:5;;;;;;;;;;;:::i;:::-;9324:20:3;;;310:5108:5;;;;;;;;;;:::o;941:175:2:-;310:5108:5;;-1:-1:-1;;;1050:58:2;;;;-1:-1:-1;;;;;310:5108:5;;;1050:58:2;;;310:5108:5;;;;;;;;;1050:58:2;;;310:5108:5;;;;;;;;;;;;;1050:58:2;310:5108:5;;;1050:58:2;:::i;:::-;941:175::o;2803:394:5:-;-1:-1:-1;;;;;310:5108:5;;;-1:-1:-1;310:5108:5;;;2918:9;310:5108;;;;;;-1:-1:-1;;310:5108:5;;2947:15;;2943:29;;3058:26;2992:27;;3160:6;2992:27;;:::i;:::-;310:5108;;;;;2918:9;310:5108;;;;;;3058:26;310:5108;3058:26;:::i;:::-;;310:5108;3094:22;310:5108;;;3094:22;:::i;:::-;310:5108;;3134:5;310:5108;3160:6;:::i;:::-;2803:394;:::o;2943:29::-;2964:8;;;;;:::o;3785:188::-;3879:12;310:5108;3879:17;;3875:36;;3929:21;3928:38;310:5108;3938:12;310:5108;3929:21;;:::i;:::-;3928:38;:::i;3875:36::-;3898:13;;:::o;3979:188::-;4073:12;310:5108;4073:17;;4069:36;;4123:21;4122:38;310:5108;4132:12;310:5108;4123:21;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"798800","executionCost":"infinite","totalCost":"infinite"},"external":{"asset()":"infinite","balanceOf(address)":"2710","calculateUserYield(address)":"4727","calculateYield(uint256,uint256)":"infinite","convertToAssets(uint256)":"4631","convertToShares(uint256)":"5071","currentAPY()":"2698","deposit(uint256)":"infinite","emergencyWithdraw(address)":"infinite","getCurrentAPY()":"2676","getPerformanceData(uint256)":"2490","getRiskScore()":"255","getStrategyInfo()":"infinite","getTotalYieldGenerated()":"2471","harvestYield()":"6205","isProfitable()":"299","maxCapacity()":"412","name()":"infinite","setCurrentAPY(uint256)":"22434","setName(string)":"infinite","setShouldFail(bool)":"24850","setUserYield(uint256)":"22607","totalAssets()":"2268","totalDeposited()":"2833","utilizationRate()":"infinite","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"asset()":"38d52e0f","balanceOf(address)":"70a08231","calculateUserYield(address)":"6f7c99d2","calculateYield(uint256,uint256)":"043cbe5b","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","currentAPY()":"9a79d32b","deposit(uint256)":"b6b55f25","emergencyWithdraw(address)":"6ff1c9bc","getCurrentAPY()":"962ca496","getPerformanceData(uint256)":"3fd18893","getRiskScore()":"2b35f739","getStrategyInfo()":"9613092d","getTotalYieldGenerated()":"39c1a8e8","harvestYield()":"e8d991d1","isProfitable()":"3612ddda","maxCapacity()":"59b6a0c9","name()":"06fdde03","setCurrentAPY(uint256)":"39a24333","setName(string)":"c47f0027","setShouldFail(bool)":"a5aa5c12","setUserYield(uint256)":"8b66268c","totalAssets()":"01e1d114","totalDeposited()":"ff50abdc","utilizationRate()":"6c321c8a","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"parameter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalAssets\",\"type\":\"uint256\"}],\"name\":\"YieldHarvested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateUserYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeInSeconds\",\"type\":\"uint256\"}],\"name\":\"calculateYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getPerformanceData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRiskScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"riskScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastHarvest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IYieldStrategy.StrategyInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalYieldGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isProfitable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"name\":\"setCurrentAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"strategyName\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"shouldFail\",\"type\":\"bool\"}],\"name\":\"setShouldFail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setUserYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock yield strategy for testing purposes\",\"events\":{\"Deposit(address,uint256,uint256)\":{\"details\":\"Emitted when funds are deposited into the strategy\",\"params\":{\"amount\":\"The amount deposited\",\"shares\":\"The number of shares minted\",\"user\":\"The address that deposited funds\"}},\"StrategyUpdated(string,uint256,uint256)\":{\"details\":\"Emitted when strategy parameters are updated\",\"params\":{\"newValue\":\"The new value\",\"oldValue\":\"The old value\",\"parameter\":\"The parameter that was updated\"}},\"Withdrawal(address,uint256,uint256)\":{\"details\":\"Emitted when funds are withdrawn from the strategy\",\"params\":{\"amount\":\"The amount withdrawn\",\"shares\":\"The number of shares burned\",\"user\":\"The address that withdrew funds\"}},\"YieldHarvested(uint256,uint256)\":{\"details\":\"Emitted when yield is harvested\",\"params\":{\"newTotalAssets\":\"The new total assets under management\",\"yieldAmount\":\"The amount of yield harvested\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the user's share balance\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The user's share balance\"}},\"calculateUserYield(address)\":{\"details\":\"Calculates yield generated for a specific user\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The amount of yield generated\"}},\"convertToAssets(uint256)\":{\"details\":\"Converts shares to assets\",\"params\":{\"shares\":\"The number of shares\"},\"returns\":{\"_0\":\"The equivalent amount of assets\"}},\"convertToShares(uint256)\":{\"details\":\"Converts assets to shares\",\"params\":{\"assets\":\"The amount of assets\"},\"returns\":{\"_0\":\"The equivalent number of shares\"}},\"deposit(uint256)\":{\"details\":\"Deposits assets into the yield strategy\",\"params\":{\"amount\":\"The amount of assets to deposit\"},\"returns\":{\"shares\":\"The number of shares minted to the depositor\"}},\"emergencyWithdraw(address)\":{\"details\":\"Emergency withdrawal of all user funds (may incur penalties)\",\"params\":{\"user\":\"The address to withdraw funds for\"},\"returns\":{\"amount\":\"The amount of assets withdrawn\"}},\"getCurrentAPY()\":{\"details\":\"Calculates the current APY of the strategy\",\"returns\":{\"_0\":\"The current APY in basis points\"}},\"getRiskScore()\":{\"details\":\"Gets the strategy's risk score\",\"returns\":{\"_0\":\"The risk score from 1-10 (1 = lowest risk)\"}},\"getStrategyInfo()\":{\"details\":\"Gets comprehensive strategy information\",\"returns\":{\"_0\":\"The strategy information struct\"}},\"getTotalYieldGenerated()\":{\"details\":\"Calculates the total yield generated by the strategy\",\"returns\":{\"_0\":\"The total yield generated\"}},\"harvestYield()\":{\"details\":\"Harvests yield from the underlying protocol\",\"returns\":{\"_0\":\"The amount of yield harvested\"}},\"isProfitable()\":{\"details\":\"Checks if the strategy is profitable\",\"returns\":{\"_0\":\"Whether the strategy is currently profitable\"}},\"maxCapacity()\":{\"details\":\"Gets the maximum capacity of the strategy\",\"returns\":{\"_0\":\"The maximum amount of assets the strategy can handle\"}},\"totalAssets()\":{\"details\":\"Gets the total assets under management\",\"returns\":{\"_0\":\"The total assets managed by this strategy\"}},\"utilizationRate()\":{\"details\":\"Gets the current utilization rate\",\"returns\":{\"_0\":\"The utilization rate as a percentage (basis points)\"}},\"withdraw(uint256)\":{\"details\":\"Withdraws assets from the yield strategy\",\"params\":{\"shares\":\"The number of shares to burn\"},\"returns\":{\"amount\":\"The amount of assets withdrawn\"}}},\"stateVariables\":{\"asset\":{\"details\":\"Gets the underlying asset address\",\"return\":\"The address of the underlying asset (e.g., USDC)\",\"returns\":{\"_0\":\"The address of the underlying asset (e.g., USDC)\"}}},\"title\":\"MockYieldStrategy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mocks/MockYieldStrategy.sol\":\"MockYieldStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"src/interfaces/IYieldStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IYieldStrategy\\n * @dev Interface for yield generation strategies in YieldRails\\n * @notice All yield strategies must implement this interface for compatibility\\n * @author YieldRails Team\\n */\\ninterface IYieldStrategy {\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // EVENTS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Emitted when funds are deposited into the strategy\\n     * @param user The address that deposited funds\\n     * @param amount The amount deposited\\n     * @param shares The number of shares minted\\n     */\\n    event Deposit(address indexed user, uint256 amount, uint256 shares);\\n\\n    /**\\n     * @dev Emitted when funds are withdrawn from the strategy\\n     * @param user The address that withdrew funds\\n     * @param amount The amount withdrawn\\n     * @param shares The number of shares burned\\n     */\\n    event Withdrawal(address indexed user, uint256 amount, uint256 shares);\\n\\n    /**\\n     * @dev Emitted when yield is harvested\\n     * @param yieldAmount The amount of yield harvested\\n     * @param newTotalAssets The new total assets under management\\n     */\\n    event YieldHarvested(uint256 yieldAmount, uint256 newTotalAssets);\\n\\n    /**\\n     * @dev Emitted when strategy parameters are updated\\n     * @param parameter The parameter that was updated\\n     * @param oldValue The old value\\n     * @param newValue The new value\\n     */\\n    event StrategyUpdated(string parameter, uint256 oldValue, uint256 newValue);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // STRUCTS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Strategy metadata and performance metrics\\n     */\\n    struct StrategyInfo {\\n        string name;                // Strategy name (e.g., \\\"T-Bill Strategy\\\")\\n        string description;         // Strategy description\\n        uint256 totalAssets;        // Total assets under management\\n        uint256 totalShares;        // Total shares outstanding\\n        uint256 currentAPY;         // Current APY in basis points (e.g., 400 = 4%)\\n        uint256 riskScore;          // Risk score from 1-10 (1 = lowest risk)\\n        uint256 lastHarvest;        // Timestamp of last yield harvest\\n        bool active;                // Whether strategy is active\\n    }\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // DEPOSIT & WITHDRAWAL FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Deposits assets into the yield strategy\\n     * @param amount The amount of assets to deposit\\n     * @return shares The number of shares minted to the depositor\\n     */\\n    function deposit(uint256 amount) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Withdraws assets from the yield strategy\\n     * @param shares The number of shares to burn\\n     * @return amount The amount of assets withdrawn\\n     */\\n    function withdraw(uint256 shares) external returns (uint256 amount);\\n\\n    /**\\n     * @dev Emergency withdrawal of all user funds (may incur penalties)\\n     * @param user The address to withdraw funds for\\n     * @return amount The amount of assets withdrawn\\n     */\\n    function emergencyWithdraw(address user) external returns (uint256 amount);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // YIELD CALCULATION FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Calculates the current APY of the strategy\\n     * @return apy The current APY in basis points\\n     */\\n    function getCurrentAPY() external view returns (uint256 apy);\\n\\n    /**\\n     * @dev Calculates yield generated for a specific user\\n     * @param user The user address\\n     * @return yieldAmount The amount of yield generated\\n     */\\n    function calculateUserYield(address user) external view returns (uint256 yieldAmount);\\n\\n    /**\\n     * @dev Calculates the total yield generated by the strategy\\n     * @return totalYield The total yield generated\\n     */\\n    function getTotalYieldGenerated() external view returns (uint256 totalYield);\\n\\n    /**\\n     * @dev Harvests yield from the underlying protocol\\n     * @return yieldHarvested The amount of yield harvested\\n     */\\n    function harvestYield() external returns (uint256 yieldHarvested);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // SHARE CALCULATION FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Converts assets to shares\\n     * @param assets The amount of assets\\n     * @return shares The equivalent number of shares\\n     */\\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Converts shares to assets\\n     * @param shares The number of shares\\n     * @return assets The equivalent amount of assets\\n     */\\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Gets the user's share balance\\n     * @param user The user address\\n     * @return balance The user's share balance\\n     */\\n    function balanceOf(address user) external view returns (uint256 balance);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // STRATEGY INFORMATION FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Gets comprehensive strategy information\\n     * @return info The strategy information struct\\n     */\\n    function getStrategyInfo() external view returns (StrategyInfo memory info);\\n\\n    /**\\n     * @dev Gets the underlying asset address\\n     * @return asset The address of the underlying asset (e.g., USDC)\\n     */\\n    function asset() external view returns (address asset);\\n\\n    /**\\n     * @dev Gets the total assets under management\\n     * @return totalManagedAssets The total assets managed by this strategy\\n     */\\n    function totalAssets() external view returns (uint256 totalManagedAssets);\\n\\n    /**\\n     * @dev Gets the strategy's risk score\\n     * @return risk The risk score from 1-10 (1 = lowest risk)\\n     */\\n    function getRiskScore() external view returns (uint256 risk);\\n\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n    // PERFORMANCE FUNCTIONS\\n    // \\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\\n    /**\\n     * @dev Gets historical performance data\\n     * @param period The time period to look back (in seconds)\\n     * @return performance The performance data for the specified period\\n     */\\n    function getPerformanceData(uint256 period) external view returns (uint256 performance);\\n\\n    /**\\n     * @dev Checks if the strategy is profitable\\n     * @return profitable Whether the strategy is currently profitable\\n     */\\n    function isProfitable() external view returns (bool profitable);\\n\\n    /**\\n     * @dev Gets the maximum capacity of the strategy\\n     * @return maxCapacity The maximum amount of assets the strategy can handle\\n     */\\n    function maxCapacity() external view returns (uint256 maxCapacity);\\n\\n    /**\\n     * @dev Gets the current utilization rate\\n     * @return utilization The utilization rate as a percentage (basis points)\\n     */\\n    function utilizationRate() external view returns (uint256 utilization);\\n}\",\"keccak256\":\"0x3dbcde8604a18aff443ee40442187a697d0c9772bfe40e650f9e3b4da40b38cb\",\"license\":\"MIT\"},\"src/mocks/MockYieldStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"../interfaces/IYieldStrategy.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title MockYieldStrategy\\n * @dev Mock yield strategy for testing purposes\\n */\\ncontract MockYieldStrategy is IYieldStrategy {\\n    using SafeERC20 for IERC20;\\n\\n    address public immutable override asset;\\n    string private _name;\\n    uint256 private _totalAssets;\\n    uint256 private _totalShares;\\n    uint256 private _userYield;\\n    uint256 private _currentAPY = 400; // 4% default\\n    bool private _shouldFail = false;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    constructor(address _asset) {\\n        asset = _asset;\\n        _name = \\\"Mock Strategy\\\";\\n    }\\n\\n    // Test helper functions\\n    function setUserYield(uint256 amount) external {\\n        _userYield = amount;\\n    }\\n\\n    function setShouldFail(bool shouldFail) external {\\n        _shouldFail = shouldFail;\\n    }\\n\\n    function setCurrentAPY(uint256 apy) external {\\n        _currentAPY = apy;\\n    }\\n\\n    function setName(string memory strategyName) external {\\n        _name = strategyName;\\n    }\\n\\n    // Additional methods for testing compatibility\\n    function name() external view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function currentAPY() external view returns (uint256) {\\n        return _currentAPY;\\n    }\\n\\n    function totalDeposited() external view returns (uint256) {\\n        return _totalAssets;\\n    }\\n\\n    function calculateYield(uint256 principal, uint256 timeInSeconds) external view returns (uint256) {\\n        // Simple yield calculation: (principal * APY * time) / (10000 * seconds_in_year)\\n        uint256 annualYield = (principal * _currentAPY) / 10000;\\n        uint256 secondsInYear = 365 * 24 * 60 * 60;\\n        return (annualYield * timeInSeconds) / secondsInYear;\\n    }\\n\\n    // IYieldStrategy implementation\\n    function deposit(uint256 amount) external override returns (uint256 shares) {\\n        IERC20(asset).safeTransferFrom(msg.sender, address(this), amount);\\n        \\n        shares = convertToShares(amount);\\n        _balances[msg.sender] += shares;\\n        _totalShares += shares;\\n        _totalAssets += amount;\\n\\n        emit Deposit(msg.sender, amount, shares);\\n        return shares;\\n    }\\n\\n    function withdraw(uint256 shares) external override returns (uint256 amount) {\\n        require(_balances[msg.sender] >= shares, \\\"Insufficient shares\\\");\\n        \\n        amount = convertToAssets(shares);\\n        _balances[msg.sender] -= shares;\\n        _totalShares -= shares;\\n        _totalAssets -= amount;\\n\\n        IERC20(asset).safeTransfer(msg.sender, amount);\\n\\n        emit Withdrawal(msg.sender, amount, shares);\\n        return amount;\\n    }\\n\\n    function emergencyWithdraw(address user) external override returns (uint256 amount) {\\n        uint256 userShares = _balances[user];\\n        if (userShares == 0) return 0;\\n\\n        amount = convertToAssets(userShares);\\n        _balances[user] = 0;\\n        _totalShares -= userShares;\\n        _totalAssets -= amount;\\n\\n        IERC20(asset).safeTransfer(user, amount);\\n        return amount;\\n    }\\n\\n    function getCurrentAPY() external view override returns (uint256) {\\n        return _currentAPY;\\n    }\\n\\n    function calculateUserYield(address user) external view override returns (uint256) {\\n        if (_shouldFail) {\\n            revert(\\\"Mock strategy failure\\\");\\n        }\\n        return _userYield;\\n    }\\n\\n    function getTotalYieldGenerated() external view override returns (uint256) {\\n        return _userYield;\\n    }\\n\\n    function harvestYield() external override returns (uint256) {\\n        emit YieldHarvested(_userYield, _totalAssets);\\n        return _userYield;\\n    }\\n\\n    function convertToShares(uint256 assets) public view override returns (uint256) {\\n        if (_totalAssets == 0) return assets;\\n        return (assets * _totalShares) / _totalAssets;\\n    }\\n\\n    function convertToAssets(uint256 shares) public view override returns (uint256) {\\n        if (_totalShares == 0) return shares;\\n        return (shares * _totalAssets) / _totalShares;\\n    }\\n\\n    function balanceOf(address user) external view override returns (uint256) {\\n        return _balances[user];\\n    }\\n\\n    function getStrategyInfo() external view override returns (StrategyInfo memory) {\\n        return StrategyInfo({\\n            name: \\\"Mock Strategy\\\",\\n            description: \\\"Mock yield strategy for testing\\\",\\n            totalAssets: _totalAssets,\\n            totalShares: _totalShares,\\n            currentAPY: _currentAPY,\\n            riskScore: 1,\\n            lastHarvest: block.timestamp,\\n            active: true\\n        });\\n    }\\n\\n    function totalAssets() external view override returns (uint256) {\\n        return _totalAssets;\\n    }\\n\\n    function getRiskScore() external pure override returns (uint256) {\\n        return 1;\\n    }\\n\\n    function getPerformanceData(uint256) external view override returns (uint256) {\\n        return _currentAPY;\\n    }\\n\\n    function isProfitable() external pure override returns (bool) {\\n        return true;\\n    }\\n\\n    function maxCapacity() external pure override returns (uint256) {\\n        return type(uint256).max;\\n    }\\n\\n    function utilizationRate() external view override returns (uint256) {\\n        return _totalAssets > 0 ? (_totalAssets * 10000) / this.maxCapacity() : 0;\\n    }\\n}\",\"keccak256\":\"0x588076badf024d67e3adb92ab7e3e578ec264d535f0e2e02b347361cc498fbca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1017,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1019,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_totalAssets","offset":0,"slot":"1","type":"t_uint256"},{"astId":1021,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_totalShares","offset":0,"slot":"2","type":"t_uint256"},{"astId":1023,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_userYield","offset":0,"slot":"3","type":"t_uint256"},{"astId":1026,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_currentAPY","offset":0,"slot":"4","type":"t_uint256"},{"astId":1029,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_shouldFail","offset":0,"slot":"5","type":"t_bool"},{"astId":1033,"contract":"src/mocks/MockYieldStrategy.sol:MockYieldStrategy","label":"_balances","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}