# YieldRails Kubernetes Secrets
# NOTE: This file contains placeholder values. In production, secrets should be:
# 1. Created using kubectl create secret or external secret management
# 2. Managed through tools like HashiCorp Vault, AWS Secrets Manager, or Azure Key Vault
# 3. Never committed to version control with real values

apiVersion: v1
kind: Secret
metadata:
  name: yieldrails-secrets
  namespace: yieldrails-prod
type: Opaque
stringData:
  # Database Credentials
  DATABASE_URL: "postgresql://username:password@postgres-service:5432/yieldrails"
  DB_USER: "yieldrails_user"
  DB_PASSWORD: "REPLACE_WITH_SECURE_PASSWORD"
  DB_NAME: "yieldrails_prod"
  
  # Redis Credentials
  REDIS_URL: "redis://:password@redis-service:6379"
  REDIS_PASSWORD: "REPLACE_WITH_SECURE_REDIS_PASSWORD"
  
  # JWT Secrets
  JWT_SECRET: "REPLACE_WITH_SECURE_JWT_SECRET"
  JWT_REFRESH_SECRET: "REPLACE_WITH_SECURE_JWT_REFRESH_SECRET"
  
  # API Keys
  API_KEY: "REPLACE_WITH_SECURE_API_KEY"
  CHAINALYSIS_API_KEY: "REPLACE_WITH_CHAINALYSIS_API_KEY"
  CIRCLE_API_KEY: "REPLACE_WITH_CIRCLE_API_KEY"
  MOONPAY_API_KEY: "REPLACE_WITH_MOONPAY_API_KEY"
  
  # Blockchain RPC URLs (include API keys if needed)
  ETHEREUM_RPC_URL: "https://mainnet.infura.io/v3/YOUR_PROJECT_ID"
  POLYGON_RPC_URL: "https://polygon-mainnet.infura.io/v3/YOUR_PROJECT_ID"
  ARBITRUM_RPC_URL: "https://arbitrum-mainnet.infura.io/v3/YOUR_PROJECT_ID"
  BASE_RPC_URL: "https://mainnet.base.org"
  
  # Monitoring and Error Tracking
  SENTRY_DSN: "REPLACE_WITH_SENTRY_DSN"
  NEW_RELIC_LICENSE_KEY: "REPLACE_WITH_NEW_RELIC_KEY"
  GRAFANA_USER: "admin"
  GRAFANA_PASSWORD: "REPLACE_WITH_GRAFANA_PASSWORD"
  
  # Frontend Environment Variables
  NEXT_PUBLIC_API_URL: "https://api.yieldrails.com"
  NEXT_PUBLIC_WS_URL: "wss://api.yieldrails.com"
  NEXT_PUBLIC_SENTRY_DSN: "REPLACE_WITH_FRONTEND_SENTRY_DSN"
  
---
apiVersion: v1
kind: Secret
metadata:
  name: yieldrails-staging-secrets
  namespace: yieldrails-staging
type: Opaque
stringData:
  # Database Credentials
  DATABASE_URL: "postgresql://username:password@postgres-staging-service:5432/yieldrails_staging"
  DB_USER: "yieldrails_staging_user"
  DB_PASSWORD: "REPLACE_WITH_STAGING_PASSWORD"
  DB_NAME: "yieldrails_staging"
  
  # Redis Credentials
  REDIS_URL: "redis://:password@redis-staging-service:6379"
  REDIS_PASSWORD: "REPLACE_WITH_STAGING_REDIS_PASSWORD"
  
  # JWT Secrets
  JWT_SECRET: "REPLACE_WITH_STAGING_JWT_SECRET"
  JWT_REFRESH_SECRET: "REPLACE_WITH_STAGING_JWT_REFRESH_SECRET"
  
  # API Keys (can use sandbox/test keys)
  API_KEY: "REPLACE_WITH_STAGING_API_KEY"
  CHAINALYSIS_API_KEY: "REPLACE_WITH_CHAINALYSIS_SANDBOX_KEY"
  CIRCLE_API_KEY: "REPLACE_WITH_CIRCLE_SANDBOX_KEY"
  MOONPAY_API_KEY: "REPLACE_WITH_MOONPAY_SANDBOX_KEY"
  
  # Blockchain RPC URLs (Testnets)
  ETHEREUM_RPC_URL: "https://sepolia.infura.io/v3/YOUR_PROJECT_ID"
  POLYGON_RPC_URL: "https://polygon-mumbai.infura.io/v3/YOUR_PROJECT_ID"
  ARBITRUM_RPC_URL: "https://arbitrum-sepolia.infura.io/v3/YOUR_PROJECT_ID"
  BASE_RPC_URL: "https://sepolia.base.org"
  
  # Monitoring and Error Tracking
  SENTRY_DSN: "REPLACE_WITH_STAGING_SENTRY_DSN"
  NEW_RELIC_LICENSE_KEY: "REPLACE_WITH_STAGING_NEW_RELIC_KEY"
  GRAFANA_USER: "admin"
  GRAFANA_PASSWORD: "REPLACE_WITH_STAGING_GRAFANA_PASSWORD"
  
  # Frontend Environment Variables
  NEXT_PUBLIC_API_URL: "https://staging-api.yieldrails.com"
  NEXT_PUBLIC_WS_URL: "wss://staging-api.yieldrails.com"
  NEXT_PUBLIC_SENTRY_DSN: "REPLACE_WITH_STAGING_FRONTEND_SENTRY_DSN"

---
# TLS Secrets for HTTPS
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: yieldrails-prod
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # These should be replaced with actual certificates from Let's Encrypt or your CA
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t # Replace with base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t # Replace with base64 encoded private key

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-staging-secret
  namespace: yieldrails-staging
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key for staging
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t # Replace with base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t # Replace with base64 encoded private key